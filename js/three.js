// three.js - http://github.com/mrdoob/three.js
'use strict';var THREE=THREE||{REVISION:"59"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};THREE.extend=function(a,b){if(Object.keys)for(var c=Object.keys(b),d=0,e=c.length;d<e;d++){var f=c[d];Object.defineProperty(a,f,Object.getOwnPropertyDescriptor(b,f))}else for(f in c={}.hasOwnProperty,b)c.call(b,f)&&(a[f]=b[f]);return a};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!self.requestAnimationFrame;++c)self.requestAnimationFrame=self[b[c]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[b[c]+"CancelAnimationFrame"]||self[b[c]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),h=self.setTimeout(function(){b(c+f)},f);a=c+f;return h});void 0===self.cancelAnimationFrame&&void 0!==
self.clearTimeout&&(self.cancelAnimationFrame=function(a){self.clearTimeout(a)})})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;
THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;
THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;
THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;
THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(a){void 0!==a&&this.set(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1/6?a+6*(b-a)*
c:0.5>c?b:c<2/3?a+6*(b-a)*(2/3-c):a},b=0.5>=c?c*(1+b):c+b-c*b,c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(a))return a=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(a),this.r=Math.min(100,
parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=a.g;this.b=
a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*
this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var a={h:0,s:0,l:0};return function(){var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),h,i=(f+e)/2;if(f===e)f=h=0;else{var j=e-f,f=0.5>=i?j/(e+f):j/(2-e-f);switch(e){case b:h=(c-d)/j+(c<d?6:0);break;case c:h=(d-b)/j+2;break;case d:h=(b-c)/j+4}h/=6}a.h=h;a.s=f;a.l=i;return a}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,
b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;
this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(a){this._x=a;this._updateEuler()},get y(){return this._y},set y(a){this._y=a;this._updateEuler()},get z(){return this._z},set z(a){this._z=a;this._updateEuler()},get w(){return this._w},set w(a){this._w=a;this._updateEuler()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;
this._updateEuler();return this},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._w=a._w;this._updateEuler();return this},setFromEuler:function(a,b){void 0===typeof a.order&&console.error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),h=Math.sin(a._y/2),i=Math.sin(a._z/2);void 0===a.order||"XYZ"===a.order?(this._x=f*d*e+c*h*i,
this._y=c*h*e-f*d*i,this._z=c*d*i+f*h*e,this._w=c*d*e-f*h*i):"YXZ"===a.order?(this._x=f*d*e+c*h*i,this._y=c*h*e-f*d*i,this._z=c*d*i-f*h*e,this._w=c*d*e+f*h*i):"ZXY"===a.order?(this._x=f*d*e-c*h*i,this._y=c*h*e+f*d*i,this._z=c*d*i+f*h*e,this._w=c*d*e-f*h*i):"ZYX"===a.order?(this._x=f*d*e-c*h*i,this._y=c*h*e+f*d*i,this._z=c*d*i-f*h*e,this._w=c*d*e+f*h*i):"YZX"===a.order?(this._x=f*d*e+c*h*i,this._y=c*h*e+f*d*i,this._z=c*d*i-f*h*e,this._w=c*d*e-f*h*i):"XZY"===a.order&&(this._x=f*d*e-c*h*i,this._y=c*
h*e-f*d*i,this._z=c*d*i+f*h*e,this._w=c*d*e+f*h*i);!1!==b&&this._updateEuler();return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this._updateEuler();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],e=b[1],f=b[5],h=b[9],i=b[2],j=b[6],b=b[10],k=c+f+b;0<k?(c=0.5/Math.sqrt(k+1),this._w=0.25/c,this._x=(j-h)*c,this._y=(d-i)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(j-h)/
c,this._x=0.25*c,this._y=(a+e)/c,this._z=(d+i)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-i)/c,this._x=(a+e)/c,this._y=0.25*c,this._z=(h+j)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+i)/c,this._y=(h+j)/c,this._z=0.25*c);this._updateEuler();return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this._updateEuler();return this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},
length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);return this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,
b){var c=a._x,d=a._y,e=a._z,f=a._w,h=b._x,i=b._y,j=b._z,k=b._w;this._x=c*k+f*h+d*j-e*i;this._y=d*k+f*i+e*h-c*j;this._z=e*k+f*j+c*i-d*h;this._w=f*k-c*h-d*i-e*j;this._updateEuler();return this},multiplyVector3:function(a){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)},slerp:function(a,b){var c=this._x,d=this._y,e=this._z,f=this._w,h=f*a._w+c*a._x+d*a._y+e*a._z;0>h?(this._w=-a._w,this._x=
-a._x,this._y=-a._y,this._z=-a._z,h=-h):this.copy(a);if(1<=h)return this._w=f,this._x=c,this._y=d,this._z=e,this;var i=Math.acos(h),j=Math.sqrt(1-h*h);if(0.001>Math.abs(j))return this._w=0.5*(f+this._w),this._x=0.5*(c+this._x),this._y=0.5*(d+this._y),this._z=0.5*(e+this._z),this;h=Math.sin((1-b)*i)/j;i=Math.sin(b*i)/j;this._w=f*h+this._w*i;this._x=c*h+this._x*i;this._y=d*h+this._y*i;this._z=e*h+this._z*i;this._updateEuler();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===
this._z&&a._w===this._w},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];this._w=a[3];this._updateEuler();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,
b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=
a.y;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);
return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/
b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a){this.x=a[0];this.y=a[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*
b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements,e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);
this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,h=a.z,a=a.w,i=a*b+f*d-h*c,j=a*c+h*b-e*d,k=a*d+e*c-f*b,b=-e*b-f*c-h*d;this.x=i*a+b*-e+j*-h-k*-f;this.y=j*a+b*-f+k*-e-i*-h;this.z=k*a+b*-h+i*-f-j*-e;return this},transformDirection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*
b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<
a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){this.x=
a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},
setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();
this.x=b;this.y=c;this.z=a;return this},getColumnFromMatrix:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};
THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var a=new THREE.Quaternion;return function(b){void 0===typeof b.order&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");b=a.setFromEuler(b);this.applyQuaternion(b);return this}}(),applyAxisAngle:function(){var a=new THREE.Quaternion;return function(b,c){var d=a.setFromAxisAngle(b,c);this.applyQuaternion(d);return this}}(),projectOnVector:function(){var a=
new THREE.Vector3;return function(b){a.copy(b).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a=new THREE.Vector3;return function(b){a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a=new THREE.Vector3;return function(b){a.copy(this).projectOnVector(b).multiplyScalar(2);return this.subVectors(a,this)}}()});THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},
addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},
applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,
this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,e=a[0];d=a[4];var f=a[8],h=a[1],i=a[5],j=a[9];c=a[2];b=a[6];var k=a[10];if(0.01>Math.abs(d-h)&&0.01>Math.abs(f-c)&&0.01>Math.abs(j-b)){if(0.1>Math.abs(d+h)&&0.1>Math.abs(f+c)&&0.1>Math.abs(j+b)&&0.1>Math.abs(e+i+k-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;i=(i+1)/2;k=(k+1)/2;d=(d+h)/4;f=(f+c)/4;j=(j+b)/4;e>i&&e>k?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):i>k?0.01>i?
(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(i),b=d/c,d=j/c):0.01>k?(c=b=0.707106781,d=0):(d=Math.sqrt(k),b=f/d,c=j/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-j)*(b-j)+(f-c)*(f-c)+(h-d)*(h-d));0.001>Math.abs(a)&&(a=1);this.x=(b-j)/a;this.y=(f-c)/a;this.z=(h-d)/a;this.w=Math.acos((e+i+k-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=
a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&
a.w===this.w},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];this.w=a[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(a){this._x=a;this._updateQuaternion()},get y(){return this._y},set y(a){this._y=a;this._updateQuaternion()},get z(){return this._z},set z(a){this._z=a;this._updateQuaternion()},get order(){return this._order},set order(a){this._order=a;this._updateQuaternion()},
set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this._updateQuaternion();return this},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this._updateQuaternion();return this},setFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],h=d[8],i=d[1],j=d[5],k=d[9],m=d[2],p=d[6],d=d[10],b=b||this._order;"XYZ"===b?(this._y=Math.asin(c(h)),0.99999>Math.abs(h)?(this._x=Math.atan2(-k,d),this._z=
Math.atan2(-f,e)):(this._x=Math.atan2(p,j),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(k)),0.99999>Math.abs(k)?(this._y=Math.atan2(h,d),this._z=Math.atan2(i,j)):(this._y=Math.atan2(-m,e),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(p)),0.99999>Math.abs(p)?(this._y=Math.atan2(-m,d),this._z=Math.atan2(-f,j)):(this._y=0,this._z=Math.atan2(i,e))):"ZYX"===b?(this._y=Math.asin(-c(m)),0.99999>Math.abs(m)?(this._x=Math.atan2(p,d),this._z=Math.atan2(i,e)):(this._x=0,this._z=Math.atan2(-f,j))):"YZX"===b?(this._z=
Math.asin(c(i)),0.99999>Math.abs(i)?(this._x=Math.atan2(-k,j),this._y=Math.atan2(-m,e)):(this._x=0,this._y=Math.atan2(h,d))):"XZY"===b?(this._z=Math.asin(-c(f)),0.99999>Math.abs(f)?(this._x=Math.atan2(p,j),this._y=Math.atan2(h,e)):(this._x=Math.atan2(-k,d),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+b);this._order=b;this._updateQuaternion();return this},setFromQuaternion:function(a,b,c){function d(a){return Math.min(Math.max(a,-1),1)}var e=a.x*a.x,f=
a.y*a.y,h=a.z*a.z,i=a.w*a.w,b=b||this._order;"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),i-e-f+h),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w))),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),i+e-f-h)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z))),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),i-e-f+h),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),i-e+f-h)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z))),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),i-e-f+h),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),i-e+f-h)):"ZYX"===
b?(this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),i-e-f+h),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z))),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),i+e-f-h)):"YZX"===b?(this._x=Math.atan2(2*(a.x*a.w-a.z*a.y),i-e+f-h),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),i+e-f-h),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w)))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),i-e+f-h),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),i+e-f-h),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+
b);this._order=b;!1!==c&&this._updateQuaternion();return this},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this._updateQuaternion();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},clone:function(){return new THREE.Euler(this._x,
this._y,this._z,this._order)}};THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};
THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,
b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);
this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(0.5);
this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);
this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a){return new THREE.Vector2((a.x-this.min.x)/(this.max.x-this.min.x),
(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);
return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y),b.z<this.min.z?this.min.z=b.z:b.z>this.max.z&&(this.max.z=b.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;
return function(b,c){var d=a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);this.makeEmpty();b.traverse(function(b){if(void 0!==b.geometry&&void 0!==b.geometry.vertices)for(var e=b.geometry.vertices,f=0,h=e.length;f<h;f++)a.copy(e[f]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);
return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);
this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a){return new THREE.Vector3((a.x-this.min.x)/(this.max.x-this.min.x),
(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=
new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=0.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,
this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);
this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(a,b,c,d,e,f,h,i,j){this.elements=new Float32Array(9);this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==e?e:1,f||0,h||0,i||0,void 0!==j?j:1)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,h,i,j){var k=this.elements;k[0]=a;k[3]=b;k[6]=c;k[1]=d;k[4]=e;k[7]=f;k[2]=h;k[5]=i;k[8]=j;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},
multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],h=a[5],i=a[6],j=a[7],a=a[8];return b*f*a-b*h*j-c*e*a+c*h*i+d*e*j-d*f*i},getInverse:function(a,
b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/
c);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}};THREE.Matrix4=function(a,b,c,d,e,f,h,i,j,k,m,p,w,u,E,x){var n=this.elements=new Float32Array(16);n[0]=void 0!==a?a:1;n[4]=b||0;n[8]=c||0;n[12]=d||0;n[1]=e||0;n[5]=void 0!==f?f:1;n[9]=h||0;n[13]=i||0;n[2]=j||0;n[6]=k||0;n[10]=void 0!==m?m:1;n[14]=p||0;n[3]=w||0;n[7]=u||0;n[11]=E||0;n[15]=void 0!==x?x:1};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,h,i,j,k,m,p,w,u,E,x){var n=this.elements;n[0]=a;n[4]=b;n[8]=c;n[12]=d;n[1]=e;n[5]=f;n[9]=h;n[13]=i;n[2]=j;n[6]=k;n[10]=m;n[14]=p;n[3]=w;n[7]=u;n[11]=E;n[15]=x;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");
return this.copyPosition(a)},copyPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements,b=b.elements,d=1/a.set(b[0],b[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),f=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*f;c[9]=b[9]*f;c[10]=b[10]*f;return this}}(),makeRotationFromEuler:function(a){void 0===
typeof a.order&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),h=Math.cos(d),d=Math.sin(d),i=Math.cos(e),e=Math.sin(e);if(void 0===a.order||"XYZ"===a.order){var a=f*i,j=f*e,k=c*i,m=c*e;b[0]=h*i;b[4]=-h*e;b[8]=d;b[1]=j+k*d;b[5]=a-m*d;b[9]=-c*h;b[2]=m-a*d;b[6]=k+j*d;b[10]=f*h}else"YXZ"===a.order?(a=h*i,j=h*e,k=d*i,m=d*e,b[0]=a+m*c,b[4]=
k*c-j,b[8]=f*d,b[1]=f*e,b[5]=f*i,b[9]=-c,b[2]=j*c-k,b[6]=m+a*c,b[10]=f*h):"ZXY"===a.order?(a=h*i,j=h*e,k=d*i,m=d*e,b[0]=a-m*c,b[4]=-f*e,b[8]=k+j*c,b[1]=j+k*c,b[5]=f*i,b[9]=m-a*c,b[2]=-f*d,b[6]=c,b[10]=f*h):"ZYX"===a.order?(a=f*i,j=f*e,k=c*i,m=c*e,b[0]=h*i,b[4]=k*d-j,b[8]=a*d+m,b[1]=h*e,b[5]=m*d+a,b[9]=j*d-k,b[2]=-d,b[6]=c*h,b[10]=f*h):"YZX"===a.order?(a=f*h,j=f*d,k=c*h,m=c*d,b[0]=h*i,b[4]=m-a*e,b[8]=k*e+j,b[1]=e,b[5]=f*i,b[9]=-c*i,b[2]=-d*i,b[6]=j*e+k,b[10]=a-m*e):"XZY"===a.order&&(a=f*h,j=f*d,k=
c*h,m=c*d,b[0]=h*i,b[4]=-e,b[8]=d*i,b[1]=a*e+m,b[5]=f*i,b[9]=j*e-k,b[2]=k*e-j,b[6]=c*i,b[10]=m*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,h=c+c,i=d+d,j=e+e,
a=c*h,k=c*i,c=c*j,m=d*i,d=d*j,e=e*j,h=f*h,i=f*i,f=f*j;b[0]=1-(m+e);b[4]=k-f;b[8]=c+i;b[1]=k+f;b[5]=1-(a+e);b[9]=d-h;b[2]=c-i;b[6]=d+h;b[10]=1-(a+m);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var h=this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,
a);h[0]=a.x;h[4]=b.x;h[8]=c.x;h[1]=a.y;h[5]=b.y;h[9]=c.y;h[2]=a.z;h[6]=b.z;h[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],h=c[4],i=c[8],j=c[12],k=c[1],m=c[5],p=c[9],w=c[13],u=c[2],E=c[6],x=c[10],n=c[14],B=c[3],F=c[7],
z=c[11],c=c[15],O=d[0],Q=d[4],I=d[8],da=d[12],W=d[1],t=d[5],P=d[9],v=d[13],L=d[2],T=d[6],l=d[10],R=d[14],r=d[3],ea=d[7],M=d[11],d=d[15];e[0]=f*O+h*W+i*L+j*r;e[4]=f*Q+h*t+i*T+j*ea;e[8]=f*I+h*P+i*l+j*M;e[12]=f*da+h*v+i*R+j*d;e[1]=k*O+m*W+p*L+w*r;e[5]=k*Q+m*t+p*T+w*ea;e[9]=k*I+m*P+p*l+w*M;e[13]=k*da+m*v+p*R+w*d;e[2]=u*O+E*W+x*L+n*r;e[6]=u*Q+E*t+x*T+n*ea;e[10]=u*I+E*P+x*l+n*M;e[14]=u*da+E*v+x*R+n*d;e[3]=B*O+F*W+z*L+c*r;e[7]=B*Q+F*t+z*T+c*ea;e[11]=B*I+F*P+z*l+c*M;e[15]=B*da+F*v+z*R+c*d;return this},multiplyToArray:function(a,
b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
return a.applyProjection(this)},multiplyVector4:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyProjection(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");
a.transformDirection(this)},crossVector:function(a){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],h=a[5],i=a[9],j=a[13],k=a[2],m=a[6],p=a[10],w=a[14];return a[3]*(+e*i*m-d*j*m-e*h*p+c*j*p+d*h*w-c*i*w)+a[7]*(+b*i*w-b*j*p+e*f*p-d*f*w+d*j*k-e*i*k)+a[11]*(+b*j*m-b*h*w-e*f*m+c*f*w+e*h*k-c*j*k)+a[15]*(-d*h*k-b*i*m+b*h*p+d*f*m-c*f*
p+c*i*k)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;
a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;
b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],h=d[8],i=d[12],j=d[1],k=d[5],m=d[9],p=d[13],w=d[2],u=d[6],E=d[10],x=d[14],n=d[3],B=d[7],F=d[11],d=d[15];c[0]=m*x*B-p*E*B+p*u*F-k*x*F-m*u*d+k*E*d;c[4]=i*E*B-h*x*B-i*u*F+f*x*F+h*u*d-f*E*d;c[8]=h*p*B-i*m*B+i*k*F-f*p*F-h*k*d+f*m*d;c[12]=i*m*u-h*p*u-i*k*E+f*p*E+h*k*x-f*m*x;c[1]=p*E*n-m*x*n-p*w*F+j*x*F+m*w*d-j*E*d;c[5]=h*x*n-i*E*n+i*w*F-e*x*F-h*w*d+e*E*d;c[9]=i*m*n-h*p*n-i*j*F+e*p*F+h*j*d-
e*m*d;c[13]=h*p*w-i*m*w+i*j*E-e*p*E-h*j*x+e*m*x;c[2]=k*x*n-p*u*n+p*w*B-j*x*B-k*w*d+j*u*d;c[6]=i*u*n-f*x*n-i*w*B+e*x*B+f*w*d-e*u*d;c[10]=f*p*n-i*k*n+i*j*B-e*p*B-f*j*d+e*k*d;c[14]=i*k*w-f*p*w-i*j*u+e*p*u+f*j*x-e*k*x;c[3]=m*u*n-k*E*n-m*w*B+j*E*B+k*w*F-j*u*F;c[7]=f*E*n-h*u*n+h*w*B-e*E*B-f*w*F+e*u*F;c[11]=h*k*n-f*m*n-h*j*B+e*m*B+f*j*F-e*k*F;c[15]=f*m*w-h*k*w+h*j*u-e*m*u-f*j*E+e*k*E;c=e*c[0]+j*c[4]+w*c[8]+n*c[12];if(0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");
this.identity();return this}this.multiplyScalar(1/c);return this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},
scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,
0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,h=a.y,i=a.z,j=e*f,k=e*h;this.set(j*f+c,j*h-d*i,j*i+d*h,0,j*h+d*i,k*h+c,k*i-d*f,0,j*i-d*h,k*i+d*f,e*i*i+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,
0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,h=a.set(f[0],f[1],f[2]).length(),i=a.set(f[4],f[5],f[6]).length(),j=a.set(f[8],f[9],f[10]).length();c.x=f[12];c.y=f[13];c.z=f[14];b.elements.set(this.elements);var c=1/h,f=1/i,k=1/j;b.elements[0]*=c;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=
f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=k;b.elements[9]*=k;b.elements[10]*=k;d.setFromRotationMatrix(b);e.x=h;e.y=i;e.z=j;return this}}(),makeFrustum:function(a,b,c,d,e,f){var h=this.elements;h[0]=2*e/(b-a);h[4]=0;h[8]=(b+a)/(b-a);h[12]=0;h[1]=0;h[5]=2*e/(d-c);h[9]=(d+c)/(d-c);h[13]=0;h[2]=0;h[6]=0;h[10]=-(f+e)/(f-e);h[14]=-2*f*e/(f-e);h[3]=0;h[7]=0;h[11]=-1;h[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(THREE.Math.degToRad(0.5*a)),e=-a;return this.makeFrustum(e*
b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var h=this.elements,i=b-a,j=c-d,k=f-e;h[0]=2/i;h[4]=0;h[8]=0;h[12]=-((b+a)/i);h[1]=0;h[5]=2/j;h[9]=0;h[13]=-((c+d)/j);h[2]=0;h[6]=0;h[10]=-2/k;h[14]=-((f+e)/k);h[3]=0;h[7]=0;h[11]=0;h[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],
a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);
var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceTo(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),distanceSqToSegment:function(a,b,c,d){var e=a.clone().add(b).multiplyScalar(0.5),f=b.clone().sub(a).normalize(),h=0.5*a.distanceTo(b),
i=this.origin.clone().sub(e),a=-this.direction.dot(f),b=i.dot(this.direction),j=-i.dot(f),k=i.lengthSq(),m=Math.abs(1-a*a),p,w;0<=m?(i=a*j-b,p=a*b-j,w=h*m,0<=i?p>=-w?p<=w?(h=1/m,i*=h,p*=h,a=i*(i+a*p+2*b)+p*(a*i+p+2*j)+k):(p=h,i=Math.max(0,-(a*p+b)),a=-i*i+p*(p+2*j)+k):(p=-h,i=Math.max(0,-(a*p+b)),a=-i*i+p*(p+2*j)+k):p<=-w?(i=Math.max(0,-(-a*h+b)),p=0<i?-h:Math.min(Math.max(-h,-j),h),a=-i*i+p*(p+2*j)+k):p<=w?(i=0,p=Math.min(Math.max(-h,-j),h),a=p*(p+2*j)+k):(i=Math.max(0,-(a*h+b)),p=0<i?h:Math.min(Math.max(-h,
-j),h),a=-i*i+p*(p+2*j)+k)):(p=0<a?-h:h,i=Math.max(0,-(a*p+b)),a=-i*i+p*(p+2*j)+k);c&&c.copy(this.direction.clone().multiplyScalar(i).add(this.origin));d&&d.copy(f.clone().multiplyScalar(p).add(e));return a},isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?
0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(a){for(var b,c=0,d=0,e=a.length;d<e;d++)b=a[d].lengthSq(),c=Math.max(c,b);this.center.set(0,0,0);this.radius=Math.sqrt(c);return this},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-
this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},applyMatrix4:function(a){this.center.applyMatrix4(a);
this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var h=this.planes;h[0].copy(a);h[1].copy(b);h[2].copy(c);h[3].copy(d);h[4].copy(e);h[5].copy(f);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],e=c[2],f=c[3],h=c[4],i=c[5],j=c[6],k=c[7],m=c[8],p=c[9],w=c[10],u=c[11],E=c[12],x=c[13],n=c[14],c=c[15];b[0].setComponents(f-a,k-h,u-m,c-E).normalize();b[1].setComponents(f+
a,k+h,u+m,c+E).normalize();b[2].setComponents(f+d,k+i,u+p,c+x).normalize();b[3].setComponents(f-d,k-i,u-p,c-x).normalize();b[4].setComponents(f-e,k-j,u-w,c-n).normalize();b[5].setComponents(f+e,k+j,u+w,c+n).normalize();return this},intersectsObject:function(){var a=new THREE.Vector3;return function(b){var c=b.geometry,b=b.matrixWorld;null===c.boundingSphere&&c.computeBoundingSphere();c=-c.boundingSphere.radius*b.getMaxScaleOnAxis();a.getPositionFromMatrix(b);for(var b=this.planes,d=0;6>d;d++)if(b[d].distanceToPoint(a)<
c)return!1;return!0}}(),intersectsSphere:function(a){for(var b=this.planes,c=a.center,a=-a.radius,d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var h=f.distanceToPoint(a),
f=f.distanceToPoint(b);if(0>h&&0>f)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,
c);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start),a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0==f){if(0==this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),
coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){var d=d||(new THREE.Matrix3).getNormalMatrix(c),e=a.copy(this.normal).applyMatrix3(d),f=this.coplanarPoint(b);f.applyMatrix4(c);this.setFromNormalAndCoplanarPoint(e,f);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&
a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={PI2:2*Math.PI,generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?b[e]="-":14==e?b[e]="4":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19==e?d&3|8:d]);return b.join("")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,
b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0},degToRad:function(){var a=Math.PI/
180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}()};THREE.Spline=function(a){function b(a,b,c,d,e,f,h){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*h+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,h,i,j,k,m,p,w;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);h=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;k=this.points[c[0]];m=this.points[c[1]];p=this.points[c[2]];w=this.points[c[3]];i=h*h;j=h*i;d.x=b(k.x,m.x,p.x,w.x,h,i,j);d.y=b(k.y,m.y,p.y,w.y,h,i,j);d.z=b(k.z,m.z,p.z,w.z,h,i,j);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,h=new THREE.Vector3,i=[],j=0;i[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),h.copy(d),j+=h.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(i[b]=j,e=b);i[i.length]=j;return{chunks:i,total:j}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,h,i=[],j=new THREE.Vector3,k=this.getLength();i.push(j.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=k.chunks[b]-k.chunks[b-1];h=Math.ceil(a*c/k.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<h-1;c++)d=e+c*(1/h)*(f-e),d=this.getPoint(d),
i.push(j.copy(d).clone());i.push(j.copy(this.points[b]).clone())}this.points=i}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();
THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,h,i){a.subVectors(h,e);b.subVectors(f,e);c.subVectors(d,e);var d=a.dot(a),e=a.dot(b),f=a.dot(c),j=b.dot(b),h=b.dot(c),k=d*j-e*e,i=i||new THREE.Vector3;if(0==k)return i.set(-2,-1,-1);k=1/k;j=(j*f-e*h)*k;d=(d*h-e*f)*k;return i.set(1-j-d,d,j)}}();
THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return 0.5*a.cross(b).length()}}(),midpoint:function(a){return(a||
new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},
clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.UV=function(a,b){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(a,b)};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),
a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&
c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners,d=c[a].indexOf(b);-1!==d&&c[a].splice(d,1)}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=0,d=b.length;c<d;c++)b[c].call(this,a)}}}};(function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c);0<this.ray.direction.lengthSq()&&this.ray.direction.normalize();this.near=d||0;this.far=e||Infinity};var b=new a.Sphere,c=new a.Ray,d=new a.Plane,e=new a.Vector3,f=new a.Vector3,h=new a.Matrix4,i=function(a,b){return a.distance-b.distance},j=function(i,k,w){if(i instanceof a.Particle){f.getPositionFromMatrix(i.matrixWorld);var u=k.ray.distanceToPoint(f);if(u>i.scale.x)return w;w.push({distance:u,point:i.position,face:null,object:i})}else if(i instanceof
a.LOD)f.getPositionFromMatrix(i.matrixWorld),u=k.ray.origin.distanceTo(f),j(i.getObjectForDistance(u),k,w);else if(i instanceof a.Mesh){u=i.geometry;f.getPositionFromMatrix(i.matrixWorld);null===u.boundingSphere&&u.computeBoundingSphere();b.set(f,u.boundingSphere.radius*i.matrixWorld.getMaxScaleOnAxis());if(!1===k.ray.isIntersectionSphere(b))return w;var E=u.vertices;if(u instanceof a.BufferGeometry){var x=i.material;if(void 0===x||!1===u.dynamic)return w;var n=i.material instanceof a.MeshFaceMaterial,
B=!0===n?i.material.materials:null,F=i.material.side,z,O,Q=k.precision;h.getInverse(i.matrixWorld);c.copy(k.ray).applyMatrix4(h);var I,E=!1;u.attributes.index&&(E=!0);B=new a.Vector3;I=new a.Vector3;var da=new a.Vector3;new a.Vector3;new a.Vector3;for(var W=0;W<u.offsets.length;++W)for(var t=u.offsets[W].start,P=u.offsets[W].index,n=t,v=t+u.offsets[W].count;n<v;n+=3)if(E?(F=P+u.attributes.index.array[n],z=P+u.attributes.index.array[n+1],O=P+u.attributes.index.array[n+2]):(F=P,z=P+1,O=P+2),B.set(u.attributes.position.array[3*
F],u.attributes.position.array[3*F+1],u.attributes.position.array[3*F+2]),I.set(u.attributes.position.array[3*z],u.attributes.position.array[3*z+1],u.attributes.position.array[3*z+2]),da.set(u.attributes.position.array[3*O],u.attributes.position.array[3*O+1],u.attributes.position.array[3*O+2]),d.setFromCoplanarPoints(B,I,da),t=c.distanceToPlane(d),!(t<Q)&&null!==t){F=x.side;if(F!==a.DoubleSide&&(z=c.direction.dot(d.normal),!(F===a.FrontSide?0>z:0<z)))continue;t<k.near||t>k.far||(e=c.at(t,e),!1!==
a.Triangle.containsPoint(e,B,I,da)&&w.push({distance:t,point:k.ray.at(t),face:null,faceIndex:null,object:i}))}}else if(u instanceof a.Geometry){n=i.material instanceof a.MeshFaceMaterial;B=!0===n?i.material.materials:null;Q=k.precision;h.getInverse(i.matrixWorld);c.copy(k.ray).applyMatrix4(h);da=0;for(I=u.faces.length;da<I;da++)if(W=u.faces[da],x=!0===n?B[W.materialIndex]:i.material,void 0!==x&&(d.setFromNormalAndCoplanarPoint(W.normal,E[W.a]),t=c.distanceToPlane(d),!(t<Q)&&null!==t)){F=x.side;if(F!==
a.DoubleSide&&(z=c.direction.dot(d.normal),!(F===a.FrontSide?0>z:0<z)))continue;if(!(t<k.near||t>k.far)){e=c.at(t,e);if(W instanceof a.Face3){if(F=E[W.a],z=E[W.b],O=E[W.c],!1===a.Triangle.containsPoint(e,F,z,O))continue}else if(W instanceof a.Face4){if(F=E[W.a],z=E[W.b],O=E[W.c],x=E[W.d],!1===a.Triangle.containsPoint(e,F,z,x)&&!1===a.Triangle.containsPoint(e,z,O,x))continue}else throw Error("face type not supported");w.push({distance:t,point:k.ray.at(t),face:W,faceIndex:da,object:i})}}}}else if(i instanceof
a.Line){Q=k.linePrecision;Q*=Q;u=i.geometry;null===u.boundingSphere&&u.computeBoundingSphere();f.getPositionFromMatrix(i.matrixWorld);b.set(f,u.boundingSphere.radius*i.matrixWorld.getMaxScaleOnAxis());if(!1===k.ray.isIntersectionSphere(b))return w;h.getInverse(i.matrixWorld);c.copy(k.ray).applyMatrix4(h);c.direction.normalize();E=u.vertices;x=E.length;t=new a.Vector3;F=new a.Vector3;z=i.type===a.LineStrip?1:2;for(n=0;n<x-1;n+=z)c.distanceSqToSegment(E[n],E[n+1],F,t)<=Q&&(u=c.origin.distanceTo(F),
k.near<=u&&u<=k.far&&w.push({distance:u,point:t.clone().applyMatrix4(i.matrixWorld),face:null,faceIndex:null,object:i}))}},k=function(a,b,c){for(var a=a.getDescendants(),d=0,e=a.length;d<e;d++)j(a[d],b,c)};a.Raycaster.prototype.precision=1E-4;a.Raycaster.prototype.linePrecision=1;a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b);0<this.ray.direction.length()&&this.ray.direction.normalize()};a.Raycaster.prototype.intersectObject=function(a,b){var c=[];!0===b&&k(a,this,c);j(a,this,c);c.sort(i);
return c};a.Raycaster.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)j(a[d],this,c),!0===b&&k(a[d],this,c);c.sort(i);return c}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Euler;this.quaternion=new THREE.Quaternion;this.scale=new THREE.Vector3(1,1,1);this.rotation._quaternion=this.quaternion;this.quaternion._euler=this.rotation;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;
this.visible=this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};
THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");return this.rotation.order},set eulerOrder(a){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");this.rotation.order=a},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},
applyMatrix:function(){var a=new THREE.Matrix4;return function(b){this.matrix.multiplyMatrices(b,this.matrix);this.position.getPositionFromMatrix(this.matrix);this.scale.getScaleFromMatrix(this.matrix);a.extractRotation(this.matrix);this.quaternion.setFromRotationMatrix(a)}}(),setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},
setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,
b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b);a.applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));return this}}(),translate:function(a,b){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=
new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),
add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;a.dispatchEvent({type:"added"});this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;a.dispatchEvent({type:"removed"});this.children.splice(b,1);for(b=this;void 0!==
b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},getObjectById:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.id===a||!0===b&&(e=e.getObjectById(a,b),void 0!==e))return e}},getObjectByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getObjectByName(a,b),void 0!==
e))return e}},getChildByName:function(a,b){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a,b)},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===
this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a,b){void 0===a&&(a=new THREE.Object3D);void 0===b&&(b=!0);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.quaternion.copy(this.quaternion);
a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));if(!0===b)for(var c=0;c<this.children.length;c++)a.add(this.children[c].clone());
return a}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Projector=function(){function a(){if(j===m){var a=new THREE.RenderableVertex;k.push(a);m++;j++;return a}return k[j++]}function b(a,b){return a.z!==b.z?b.z-a.z:a.id!==b.id?a.id-b.id:0}function c(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,h=-a.z+a.w,i=-b.z+b.w;if(0<=e&&0<=f&&0<=h&&0<=i)return!0;if(0>e&&0>f||0>h&&0>i)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>h?c=Math.max(c,h/(h-i)):0>i&&(d=Math.min(d,h/(h-i)));if(d<c)return!1;a.lerp(b,c);b.lerp(a,1-d);return!0}var d,e,f=[],h=
0,i,j,k=[],m=0,p,w,u=[],E=0,x,n=[],B=0,F,z,O=[],Q=0,I,da,W=[],t=0,P={objects:[],sprites:[],lights:[],elements:[]},v=new THREE.Vector3,L=new THREE.Vector4,T=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),l=new THREE.Box3,R=Array(3),r=Array(4),ea=new THREE.Matrix4,M=new THREE.Matrix4,Ja,mb=new THREE.Matrix4,pb=new THREE.Matrix3,tb=new THREE.Matrix3,$a=new THREE.Vector3,Ka=new THREE.Frustum,db=new THREE.Vector4,A=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);
M.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);return a.applyProjection(M)};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);M.multiplyMatrices(b.matrixWorld,b.projectionMatrixInverse);return a.applyProjection(M)};this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.sub(a).normalize();return new THREE.Raycaster(a,c)};var S=function(a){if(e===h){var b=new THREE.RenderableObject;
f.push(b);h++;e++;d=b}else d=f[e++];d.id=a.id;d.object=a;null!==a.renderDepth?d.z=a.renderDepth:(v.getPositionFromMatrix(a.matrixWorld),v.applyProjection(M),d.z=v.z);return d},ja=function(a){if(!1!==a.visible){a instanceof THREE.Light?P.lights.push(a):a instanceof THREE.Mesh||a instanceof THREE.Line?(!1===a.frustumCulled||!0===Ka.intersectsObject(a))&&P.objects.push(S(a)):(a instanceof THREE.Sprite||a instanceof THREE.Particle)&&P.sprites.push(S(a));for(var b=0,c=a.children.length;b<c;b++)ja(a.children[b])}};
this.projectScene=function(d,f,h,m){var S=!1,v,fa,ha,U,ba,ua,na,ga,va,Ga,la,ka,qa;da=z=x=w=0;P.elements.length=0;!0===d.autoUpdate&&d.updateMatrixWorld();void 0===f.parent&&f.updateMatrixWorld();ea.copy(f.matrixWorldInverse.getInverse(f.matrixWorld));M.multiplyMatrices(f.projectionMatrix,ea);tb.getNormalMatrix(ea);Ka.setFromMatrix(M);e=0;P.objects.length=0;P.sprites.length=0;P.lights.length=0;ja(d);!0===h&&P.objects.sort(b);d=0;for(h=P.objects.length;d<h;d++)if(ga=P.objects[d].object,Ja=ga.matrixWorld,
j=0,ga instanceof THREE.Mesh){va=ga.geometry;ha=va.vertices;Ga=va.faces;va=va.faceVertexUvs;pb.getNormalMatrix(Ja);ka=ga.material instanceof THREE.MeshFaceMaterial;qa=!0===ka?ga.material:null;v=0;for(fa=ha.length;v<fa;v++){i=a();i.positionWorld.copy(ha[v]).applyMatrix4(Ja);i.positionScreen.copy(i.positionWorld).applyMatrix4(M);var V=1/i.positionScreen.w;i.positionScreen.x*=V;i.positionScreen.y*=V;i.positionScreen.z*=V;i.visible=!(-1>i.positionScreen.x||1<i.positionScreen.x||-1>i.positionScreen.y||
1<i.positionScreen.y||-1>i.positionScreen.z||1<i.positionScreen.z)}ha=0;for(v=Ga.length;ha<v;ha++)if(fa=Ga[ha],V=!0===ka?qa.materials[fa.materialIndex]:ga.material,void 0!==V){ua=V.side;if(fa instanceof THREE.Face3)if(U=k[fa.a],ba=k[fa.b],na=k[fa.c],R[0]=U.positionScreen,R[1]=ba.positionScreen,R[2]=na.positionScreen,!0===U.visible||!0===ba.visible||!0===na.visible||T.isIntersectionBox(l.setFromPoints(R)))if(S=0>(na.positionScreen.x-U.positionScreen.x)*(ba.positionScreen.y-U.positionScreen.y)-(na.positionScreen.y-
U.positionScreen.y)*(ba.positionScreen.x-U.positionScreen.x),ua===THREE.DoubleSide||S===(ua===THREE.FrontSide))w===E?(la=new THREE.RenderableFace3,u.push(la),E++,w++,p=la):p=u[w++],p.id=ga.id,p.v1.copy(U),p.v2.copy(ba),p.v3.copy(na);else continue;else continue;else if(fa instanceof THREE.Face4)if(U=k[fa.a],ba=k[fa.b],na=k[fa.c],la=k[fa.d],r[0]=U.positionScreen,r[1]=ba.positionScreen,r[2]=na.positionScreen,r[3]=la.positionScreen,!0===U.visible||!0===ba.visible||!0===na.visible||!0===la.visible||T.isIntersectionBox(l.setFromPoints(r)))if(S=
0>(la.positionScreen.x-U.positionScreen.x)*(ba.positionScreen.y-U.positionScreen.y)-(la.positionScreen.y-U.positionScreen.y)*(ba.positionScreen.x-U.positionScreen.x)||0>(ba.positionScreen.x-na.positionScreen.x)*(la.positionScreen.y-na.positionScreen.y)-(ba.positionScreen.y-na.positionScreen.y)*(la.positionScreen.x-na.positionScreen.x),ua===THREE.DoubleSide||S===(ua===THREE.FrontSide)){if(x===B){var oa=new THREE.RenderableFace4;n.push(oa);B++;x++;p=oa}else p=n[x++];p.id=ga.id;p.v1.copy(U);p.v2.copy(ba);
p.v3.copy(na);p.v4.copy(la)}else continue;else continue;p.normalModel.copy(fa.normal);!1===S&&(ua===THREE.BackSide||ua===THREE.DoubleSide)&&p.normalModel.negate();p.normalModel.applyMatrix3(pb).normalize();p.normalModelView.copy(p.normalModel).applyMatrix3(tb);p.centroidModel.copy(fa.centroid).applyMatrix4(Ja);na=fa.vertexNormals;U=0;for(ba=na.length;U<ba;U++)la=p.vertexNormalsModel[U],la.copy(na[U]),!1===S&&(ua===THREE.BackSide||ua===THREE.DoubleSide)&&la.negate(),la.applyMatrix3(pb).normalize(),
p.vertexNormalsModelView[U].copy(la).applyMatrix3(tb);p.vertexNormalsLength=na.length;U=0;for(ba=va.length;U<ba;U++)if(la=va[U][ha],void 0!==la){ua=0;for(na=la.length;ua<na;ua++)p.uvs[U][ua]=la[ua]}p.color=fa.color;p.material=V;$a.copy(p.centroidModel).applyProjection(M);p.z=$a.z;P.elements.push(p)}}else if(ga instanceof THREE.Line){mb.multiplyMatrices(M,Ja);ha=ga.geometry.vertices;U=a();U.positionScreen.copy(ha[0]).applyMatrix4(mb);Ga=ga.type===THREE.LinePieces?2:1;v=1;for(fa=ha.length;v<fa;v++)U=
a(),U.positionScreen.copy(ha[v]).applyMatrix4(mb),0<(v+1)%Ga||(ba=k[j-2],db.copy(U.positionScreen),A.copy(ba.positionScreen),!0===c(db,A)&&(db.multiplyScalar(1/db.w),A.multiplyScalar(1/A.w),z===Q?(va=new THREE.RenderableLine,O.push(va),Q++,z++,F=va):F=O[z++],F.id=ga.id,F.v1.positionScreen.copy(db),F.v2.positionScreen.copy(A),F.z=Math.max(db.z,A.z),F.material=ga.material,ga.material.vertexColors===THREE.VertexColors&&(F.vertexColors[0].copy(ga.geometry.colors[v]),F.vertexColors[1].copy(ga.geometry.colors[v-
1])),P.elements.push(F)))}d=0;for(h=P.sprites.length;d<h;d++)ga=P.sprites[d].object,Ja=ga.matrixWorld,ga instanceof THREE.Particle&&(L.set(Ja.elements[12],Ja.elements[13],Ja.elements[14],1),L.applyMatrix4(M),V=1/L.w,L.z*=V,0<L.z&&1>L.z&&(da===t?(S=new THREE.RenderableParticle,W.push(S),t++,da++,I=S):I=W[da++],I.id=ga.id,I.x=L.x*V,I.y=L.y*V,I.z=L.z,I.object=ga,I.rotation=ga.rotation.z,I.scale.x=ga.scale.x*Math.abs(I.x-(L.x+f.projectionMatrix.elements[0])/(L.w+f.projectionMatrix.elements[12])),I.scale.y=
ga.scale.y*Math.abs(I.y-(L.y+f.projectionMatrix.elements[5])/(L.w+f.projectionMatrix.elements[13])),I.material=ga.material,P.elements.push(I)));!0===m&&P.elements.sort(b);return P}};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,h){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=void 0!==h?h:0;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.normals=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=
this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];e.normal.applyMatrix3(b).normalize();for(var f=0,h=e.vertexNormals.length;f<h;f++)e.vertexNormals[f].applyMatrix3(b).normalize();e.centroid.applyMatrix4(a)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof
THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.add(this.vertices[c.d]),c.centroid.divideScalar(4))},
computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],h=this.vertices[e.b];a.subVectors(this.vertices[e.c],h);b.subVectors(f,h);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d,e;if(void 0===this.__tmpVertices){e=this.__tmpVertices=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)e[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],
d instanceof THREE.Face3?d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:d instanceof THREE.Face4&&(d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{e=this.__tmpVertices;b=0;for(c=this.vertices.length;b<c;b++)e[b].set(0,0,0)}if(a){var f,h,i,j=new THREE.Vector3,k=new THREE.Vector3,m=new THREE.Vector3,p=new THREE.Vector3,w=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(a=this.vertices[d.a],
f=this.vertices[d.b],h=this.vertices[d.c],j.subVectors(h,f),k.subVectors(a,f),j.cross(k),e[d.a].add(j),e[d.b].add(j),e[d.c].add(j)):d instanceof THREE.Face4&&(a=this.vertices[d.a],f=this.vertices[d.b],h=this.vertices[d.c],i=this.vertices[d.d],m.subVectors(i,f),k.subVectors(a,f),m.cross(k),e[d.a].add(m),e[d.b].add(m),e[d.d].add(m),p.subVectors(i,h),w.subVectors(f,h),p.cross(w),e[d.b].add(p),e[d.c].add(p),e[d.d].add(p))}else{b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?
(e[d.a].add(d.normal),e[d.b].add(d.normal),e[d.c].add(d.normal)):d instanceof THREE.Face4&&(e[d.a].add(d.normal),e[d.b].add(d.normal),e[d.c].add(d.normal),e[d.d].add(d.normal))}b=0;for(c=this.vertices.length;b<c;b++)e[b].normalize();b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c])):d instanceof THREE.Face4&&(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c]),
d.vertexNormals[3].copy(e[d.d]))},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=
this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var h=this.morphNormals[a].faceNormals,i=this.morphNormals[a].vertexNormals,j,k;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],j=new THREE.Vector3,k=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},
h.push(j),i.push(k)}h=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],j=h.faceNormals[c],k=h.vertexNormals[c],j.copy(e.normal),e instanceof THREE.Face3?(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])):(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2]),k.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<
d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,l){i=a.vertices[b];j=a.vertices[c];k=a.vertices[d];m=h[e];p=h[f];w=h[l];u=j.x-i.x;E=k.x-i.x;x=j.y-i.y;n=k.y-i.y;B=j.z-i.z;F=k.z-i.z;z=p.x-m.x;O=w.x-m.x;Q=p.y-m.y;I=w.y-m.y;da=1/(z*I-O*Q);v.set((I*u-Q*E)*da,(I*x-Q*n)*da,(I*B-Q*F)*da);L.set((z*E-O*u)*da,(z*n-O*x)*da,(z*F-O*B)*da);t[b].add(v);t[c].add(v);t[d].add(v);P[b].add(L);P[c].add(L);P[d].add(L)}var b,
c,d,e,f,h,i,j,k,m,p,w,u,E,x,n,B,F,z,O,Q,I,da,W,t=[],P=[],v=new THREE.Vector3,L=new THREE.Vector3,T=new THREE.Vector3,l=new THREE.Vector3,R=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)t[b]=new THREE.Vector3,P[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],h=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var r=["a","b","c","d"];b=0;for(c=this.faces.length;b<
c;b++){f=this.faces[b];for(d=0;d<f.vertexNormals.length;d++)R.copy(f.vertexNormals[d]),e=f[r[d]],W=t[e],T.copy(W),T.sub(R.multiplyScalar(R.dot(W))).normalize(),l.crossVectors(f.vertexNormals[d],W),e=l.dot(P[e]),e=0>e?-1:1,f.vertexTangents[d]=new THREE.Vector4(T.x,T.y,T.z,e)}this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=
new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,h,i,j,k;this.__tmpVertices=void 0;f=0;for(h=this.vertices.length;f<h;f++)d=this.vertices[f],d=Math.round(d.x*e)+"_"+Math.round(d.y*e)+"_"+Math.round(d.z*e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=
c[a[d]];e=[];f=0;for(h=this.faces.length;f<h;f++)if(a=this.faces[f],a instanceof THREE.Face3){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];i=[a.a,a.b,a.c];d=-1;for(j=0;3>j;j++)if(i[j]==i[(j+1)%3]){e.push(f);break}}else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];i=[a.a,a.b,a.c,a.d];d=-1;for(j=0;4>j;j++)i[j]==i[(j+1)%4]&&(0<=d&&e.push(f),d=j);if(0<=d){i.splice(d,1);var m=new THREE.Face3(i[0],i[1],i[2],a.normal,a.color,a.materialIndex);i=0;for(j=this.faceVertexUvs.length;i<j;i++)(k=
this.faceVertexUvs[i][f])&&k.splice(d,1);a.vertexNormals&&0<a.vertexNormals.length&&(m.vertexNormals=a.vertexNormals,m.vertexNormals.splice(d,1));a.vertexColors&&0<a.vertexColors.length&&(m.vertexColors=a.vertexColors,m.vertexColors.splice(d,1));this.faces[f]=m}}for(f=e.length-1;0<=f;f--){this.faces.splice(f,1);i=0;for(j=this.faceVertexUvs.length;i<j;i++)this.faceVertexUvs[i].splice(f,1)}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,
c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];c=0;for(d=b.length;c<d;c++){for(var e=b[c],f=[],h=0,i=e.length;h<i;h++)f.push(new THREE.Vector2(e[h].x,e[h].y));a.faceVertexUvs[0].push(f)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.attributes={};this.dynamic=!1;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&((new THREE.Matrix3).getNormalMatrix(a).multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=
this.attributes.position.array;if(a){var b=this.boundingBox,c,d,e;3<=a.length&&(b.min.x=b.max.x=a[0],b.min.y=b.max.y=a[1],b.min.z=b.max.z=a[2]);for(var f=3,h=a.length;f<h;f+=3)c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z?b.min.z=e:e>b.max.z&&(b.max.z=e)}if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=
new THREE.Sphere);var a=this.attributes.position.array;if(a){for(var b,c=0,d,e,f=0,h=a.length;f<h;f+=3)b=a[f],d=a[f+1],e=a[f+2],b=b*b+d*d+e*e,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a)};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0}var e=
this.attributes.position.array,f=this.attributes.normal.array,h,i,j,k,m,p,w=new THREE.Vector3,u=new THREE.Vector3,E=new THREE.Vector3,x=new THREE.Vector3,n=new THREE.Vector3;if(this.attributes.index){var B=this.attributes.index.array,F=this.offsets;c=0;for(d=F.length;c<d;++c){b=F[c].start;h=F[c].count;var z=F[c].index;a=b;for(b+=h;a<b;a+=3)h=z+B[a],i=z+B[a+1],j=z+B[a+2],k=e[3*h],m=e[3*h+1],p=e[3*h+2],w.set(k,m,p),k=e[3*i],m=e[3*i+1],p=e[3*i+2],u.set(k,m,p),k=e[3*j],m=e[3*j+1],p=e[3*j+2],E.set(k,m,
p),x.subVectors(E,u),n.subVectors(w,u),x.cross(n),f[3*h]+=x.x,f[3*h+1]+=x.y,f[3*h+2]+=x.z,f[3*i]+=x.x,f[3*i+1]+=x.y,f[3*i+2]+=x.z,f[3*j]+=x.x,f[3*j+1]+=x.y,f[3*j+2]+=x.z}}else{a=0;for(b=e.length;a<b;a+=9)k=e[a],m=e[a+1],p=e[a+2],w.set(k,m,p),k=e[a+3],m=e[a+4],p=e[a+5],u.set(k,m,p),k=e[a+6],m=e[a+7],p=e[a+8],E.set(k,m,p),x.subVectors(E,u),n.subVectors(w,u),x.cross(n),f[a]=x.x,f[a+1]=x.y,f[a+2]=x.z,f[a+3]=x.x,f[a+4]=x.y,f[a+5]=x.z,f[a+6]=x.x,f[a+7]=x.y,f[a+8]=x.z}this.normalizeNormals();this.normalsNeedUpdate=
!0}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},computeTangents:function(){function a(a){mb.x=d[3*a];mb.y=d[3*a+1];mb.z=d[3*a+2];pb.copy(mb);$a=i[a];M.copy($a);M.sub(mb.multiplyScalar(mb.dot($a))).normalize();Ja.crossVectors(pb,$a);Ka=Ja.dot(j[a]);tb=0>Ka?-1:1;h[4*a]=M.x;h[4*a+1]=M.y;h[4*a+2]=M.z;h[4*a+3]=tb}if(void 0===this.attributes.index||void 0===this.attributes.position||
void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,e=this.attributes.uv.array,f=c.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*f)});for(var h=this.attributes.tangent.array,i=[],j=[],k=0;k<f;k++)i[k]=new THREE.Vector3,
j[k]=new THREE.Vector3;var m,p,w,u,E,x,n,B,F,z,O,Q,I,da,W,f=new THREE.Vector3,k=new THREE.Vector3,t,P,v,L,T,l,R,r=this.offsets;v=0;for(L=r.length;v<L;++v){P=r[v].start;T=r[v].count;var ea=r[v].index;t=P;for(P+=T;t<P;t+=3)T=ea+b[t],l=ea+b[t+1],R=ea+b[t+2],m=c[3*T],p=c[3*T+1],w=c[3*T+2],u=c[3*l],E=c[3*l+1],x=c[3*l+2],n=c[3*R],B=c[3*R+1],F=c[3*R+2],z=e[2*T],O=e[2*T+1],Q=e[2*l],I=e[2*l+1],da=e[2*R],W=e[2*R+1],u-=m,m=n-m,E-=p,p=B-p,x-=w,w=F-w,Q-=z,z=da-z,I-=O,O=W-O,W=1/(Q*O-z*I),f.set((O*u-I*m)*W,(O*E-
I*p)*W,(O*x-I*w)*W),k.set((Q*m-z*u)*W,(Q*p-z*E)*W,(Q*w-z*x)*W),i[T].add(f),i[l].add(f),i[R].add(f),j[T].add(k),j[l].add(k),j[R].add(k)}var M=new THREE.Vector3,Ja=new THREE.Vector3,mb=new THREE.Vector3,pb=new THREE.Vector3,tb,$a,Ka;v=0;for(L=r.length;v<L;++v){P=r[v].start;T=r[v].count;ea=r[v].index;t=P;for(P+=T;t<P;t+=3)T=ea+b[t],l=ea+b[t+1],R=ea+b[t+2],a(T),a(l),a(R)}this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(a){void 0===a&&(a=new THREE.Light);THREE.Object3D.prototype.clone.call(this,a);a.color.copy(this.color);return a};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,a);return a};THREE.AreaLight=function(a,b){THREE.Light.call(this,a);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==b?b:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,
0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;return a};THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.position.set(0,100,0);this.groundColor=new THREE.Color(b);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var a=new THREE.PointLight;THREE.Light.prototype.clone.call(this,a);a.groundColor.copy(this.groundColor);a.intensity=this.intensity;return a};THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;THREE.Light.prototype.clone.call(this,a);a.intensity=this.intensity;a.distance=this.distance;return a};THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=
this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.distance=this.distance;a.angle=this.angle;a.exponent=this.exponent;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;return a};THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==
a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,e,f,i,j,k,n){var B=/\.dds$/i.test(f),F=b+"/"+f;if(B){var z=THREE.ImageUtils.loadCompressedTexture(F);a[e]=z}else z=document.createElement("canvas"),a[e]=new THREE.Texture(z);a[e].sourceFile=f;i&&(a[e].repeat.set(i[0],i[1]),1!==i[0]&&(a[e].wrapS=THREE.RepeatWrapping),1!==i[1]&&(a[e].wrapT=THREE.RepeatWrapping));j&&a[e].offset.set(j[0],j[1]);k&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==
f[k[0]]&&(a[e].wrapS=f[k[0]]),void 0!==f[k[1]]&&(a[e].wrapT=f[k[1]]));n&&(a[e].anisotropy=n);if(!B){var O=a[e],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);O.image.width=a;O.image.height=b;O.image.getContext("2d").drawImage(this,0,0,a,b)}else O.image=this;O.needsUpdate=!0};a.crossOrigin=h.crossOrigin;a.src=F}}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var h=this,i="MeshLambertMaterial",j={color:15658734,opacity:1,map:null,
lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?i="MeshPhongMaterial":"basic"===k&&(i="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(j.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)j.transparent=a.transparent;void 0!==a.depthTest&&(j.depthTest=a.depthTest);void 0!==a.depthWrite&&(j.depthWrite=a.depthWrite);void 0!==a.visible&&(j.visible=a.visible);void 0!==a.flipSided&&(j.side=THREE.BackSide);
void 0!==a.doubleSided&&(j.side=THREE.DoubleSide);void 0!==a.wireframe&&(j.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors));a.colorDiffuse?j.color=f(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor);a.colorSpecular&&(j.specular=f(a.colorSpecular));a.colorAmbient&&(j.ambient=f(a.colorAmbient));a.transparency&&(j.opacity=a.transparency);a.specularCoef&&(j.shininess=a.specularCoef);a.mapDiffuse&&
b&&e(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(j,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(j,"specularMap",a.mapSpecular,a.mapSpecularRepeat,
a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(j.bumpScale=a.mapBumpScale);a.mapNormal?(i=THREE.ShaderLib.normalmap,k=THREE.UniformsUtils.clone(i.uniforms),k.tNormal.value=j.normalMap,a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),j.map&&(k.tDiffuse.value=j.map,k.enableDiffuse.value=!0),j.specularMap&&(k.tSpecular.value=j.specularMap,k.enableSpecular.value=!0),j.lightMap&&(k.tAO.value=j.lightMap,k.enableAO.value=!0),k.uDiffuseColor.value.setHex(j.color),
k.uSpecularColor.value.setHex(j.specular),k.uAmbientColor.value.setHex(j.ambient),k.uShininess.value=j.shininess,void 0!==j.opacity&&(k.uOpacity.value=j.opacity),i=new THREE.ShaderMaterial({fragmentShader:i.fragmentShader,vertexShader:i.vertexShader,uniforms:k,lights:!0,fog:!0}),j.transparent&&(i.transparent=!0)):i=new THREE[i](j);void 0!==a.DbgName&&(i.name=a.DbgName);return i}};THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var e=this,f=new XMLHttpRequest;void 0!==b&&f.addEventListener("load",function(c){e.manager.itemEnd(a);b(c.target.responseText)},!1);void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1);void 0!==d&&f.addEventListener("error",function(a){d(a)},!1);void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin);f.open("GET",a,!0);f.send(null);e.manager.itemStart(a)},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,f=document.createElement("img");void 0!==b&&f.addEventListener("load",function(){e.manager.itemEnd(a);b(this)},!1);void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1);void 0!==d&&f.addEventListener("error",function(a){d(a)},!1);void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin);f.src=a;e.manager.itemStart(a)},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,h=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var i=JSON.parse(f.responseText),i=a.parse(i,d);c(i.geometry,i.materials)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===h&&
(h=f.getResponseHeader("Content-Length")),e({total:h,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(h=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.withCredentials=this.withCredentials;f.send(null)};
THREE.JSONLoader.prototype.parse=function(a,b){var c=new THREE.Geometry,d=void 0!==a.scale?1/a.scale:1,e,f,h,i,j,k,m,p,w,u,E,x,n,B,F,z=a.faces;u=a.vertices;var O=a.normals,Q=a.colors,I=0;if(void 0!==a.uvs){for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&I++;for(e=0;e<I;e++)c.faceUvs[e]=[],c.faceVertexUvs[e]=[]}i=0;for(j=u.length;i<j;)k=new THREE.Vector3,k.x=u[i++]*d,k.y=u[i++]*d,k.z=u[i++]*d,c.vertices.push(k);i=0;for(j=z.length;i<j;){u=z[i++];k=u&1;h=u&2;e=u&4;f=u&8;p=u&16;m=u&32;E=u&64;u&=128;k?(x=
new THREE.Face4,x.a=z[i++],x.b=z[i++],x.c=z[i++],x.d=z[i++],k=4):(x=new THREE.Face3,x.a=z[i++],x.b=z[i++],x.c=z[i++],k=3);h&&(h=z[i++],x.materialIndex=h);h=c.faces.length;if(e)for(e=0;e<I;e++)n=a.uvs[e],w=z[i++],F=n[2*w],w=n[2*w+1],c.faceUvs[e][h]=new THREE.Vector2(F,w);if(f)for(e=0;e<I;e++){n=a.uvs[e];B=[];for(f=0;f<k;f++)w=z[i++],F=n[2*w],w=n[2*w+1],B[f]=new THREE.Vector2(F,w);c.faceVertexUvs[e][h]=B}p&&(p=3*z[i++],f=new THREE.Vector3,f.x=O[p++],f.y=O[p++],f.z=O[p],x.normal=f);if(m)for(e=0;e<k;e++)p=
3*z[i++],f=new THREE.Vector3,f.x=O[p++],f.y=O[p++],f.z=O[p],x.vertexNormals.push(f);E&&(m=z[i++],m=new THREE.Color(Q[m]),x.color=m);if(u)for(e=0;e<k;e++)m=z[i++],m=new THREE.Color(Q[m]),x.vertexColors.push(m);c.faces.push(x)}if(a.skinWeights){i=0;for(j=a.skinWeights.length;i<j;i+=2)z=a.skinWeights[i],O=a.skinWeights[i+1],c.skinWeights.push(new THREE.Vector4(z,O,0,0))}if(a.skinIndices){i=0;for(j=a.skinIndices.length;i<j;i+=2)z=a.skinIndices[i],O=a.skinIndices[i+1],c.skinIndices.push(new THREE.Vector4(z,
O,0,0))}c.bones=a.bones;c.animation=a.animation;if(void 0!==a.morphTargets){i=0;for(j=a.morphTargets.length;i<j;i++){c.morphTargets[i]={};c.morphTargets[i].name=a.morphTargets[i].name;c.morphTargets[i].vertices=[];Q=c.morphTargets[i].vertices;I=a.morphTargets[i].vertices;z=0;for(O=I.length;z<O;z+=3)u=new THREE.Vector3,u.x=I[z]*d,u.y=I[z+1]*d,u.z=I[z+2]*d,Q.push(u)}}if(void 0!==a.morphColors){i=0;for(j=a.morphColors.length;i<j;i++){c.morphColors[i]={};c.morphColors[i].name=a.morphColors[i].name;c.morphColors[i].colors=
[];O=c.morphColors[i].colors;Q=a.morphColors[i].colors;d=0;for(z=Q.length;d<z;d+=3)I=new THREE.Color(16755200),I.setRGB(Q[d],Q[d+1],Q[d+2]),O.push(I)}}c.computeCentroids();c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials)return{geometry:c};d=this.initMaterials(a.materials,b);this.needsTangents(d)&&c.computeTangents();return{geometry:c,materials:d}};THREE.LoadingManager=function(a,b,c){var d=this,e=0,f=0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(){f++};this.itemEnd=function(a){e++;if(void 0!==d.onProgress)d.onProgress(a,e,f);if(e===f&&void 0!==d.onLoad)d.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.GeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader;d.setCrossOrigin(this.crossOrigin);d.load(a,function(a){b(c.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(){}};THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader;d.setCrossOrigin(this.crossOrigin);d.load(a,function(a){b(c.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b;switch(a.type){case "MeshBasicMaterial":b=new THREE.MeshBasicMaterial({color:a.color,opacity:a.opacity,transparent:a.transparent,wireframe:a.wireframe});break;case "MeshLambertMaterial":b=new THREE.MeshLambertMaterial({color:a.color,
ambient:a.ambient,emissive:a.emissive,opacity:a.opacity,transparent:a.transparent,wireframe:a.wireframe});break;case "MeshPhongMaterial":b=new THREE.MeshPhongMaterial({color:a.color,ambient:a.ambient,emissive:a.emissive,specular:a.specular,shininess:a.shininess,opacity:a.opacity,transparent:a.transparent,wireframe:a.wireframe});break;case "MeshNormalMaterial":b=new THREE.MeshNormalMaterial({opacity:a.opacity,transparent:a.transparent,wireframe:a.wireframe});break;case "MeshDepthMaterial":b=new THREE.MeshDepthMaterial({opacity:a.opacity,
transparent:a.transparent,wireframe:a.wireframe})}void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors);return b}};THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader(c.manager);d.setCrossOrigin(this.crossOrigin);d.load(a,function(a){b(c.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=this.parseGeometries(a.geometries),c=this.parseMaterials(a.materials);return this.parseObject(a.object,b,c)},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=0,e=a.length;d<e;d++){var f,
h=a[d];switch(h.type){case "PlaneGeometry":f=new THREE.PlaneGeometry(h.width,h.height,h.widthSegments,h.heightSegments);break;case "CubeGeometry":f=new THREE.CubeGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case "CylinderGeometry":f=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radiusSegments,h.heightSegments,h.openEnded);break;case "SphereGeometry":f=new THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,
h.thetaStart,h.thetaLength);break;case "IcosahedronGeometry":f=new THREE.IcosahedronGeometry(h.radius,h.detail);break;case "TorusGeometry":f=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case "TorusKnotGeometry":f=new THREE.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case "Geometry":f=c.parse(h.data).geometry}f.uuid=h.uuid;void 0!==h.name&&(f.name=h.name);b[h.uuid]=f}return b},parseMaterials:function(a){var b=
{};if(void 0!==a)for(var c=new THREE.MaterialLoader,d=0,e=a.length;d<e;d++){var f=a[d],h=c.parse(f);h.uuid=f.uuid;void 0!==f.name&&(h.name=f.name);b[f.uuid]=h}return b},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){var e;switch(b.type){case "Scene":e=new THREE.Scene;break;case "PerspectiveCamera":e=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);break;case "OrthographicCamera":e=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case "AmbientLight":e=
new THREE.AmbientLight(b.color);break;case "DirectionalLight":e=new THREE.DirectionalLight(b.color,b.intensity);break;case "PointLight":e=new THREE.PointLight(b.color,b.intensity,b.distance);break;case "SpotLight":e=new THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.exponent);break;case "HemisphereLight":e=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case "Mesh":e=c[b.geometry];var f=d[b.material];void 0===e&&console.error("THREE.ObjectLoader: Undefined geometry "+
b.geometry);void 0===f&&console.error("THREE.ObjectLoader: Undefined material "+b.material);e=new THREE.Mesh(e,f);break;default:e=new THREE.Object3D}e.uuid=b.uuid;void 0!==b.name&&(e.name=b.name);void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(e.position,e.quaternion,e.scale)):(void 0!==b.position&&e.position.fromArray(b.position),void 0!==b.rotation&&e.rotation.fromArray(b.rotation),void 0!==b.scale&&e.scale.fromArray(b.scale));void 0!==b.visible&&(e.visible=b.visible);void 0!==b.userData&&
(e.userData=b.userData);if(void 0!==b.children)for(var h in b.children)e.add(this.parseObject(b.children[h],c,d));return e}}()};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlers={};this.hierarchyHandlers={};this.addGeometryHandler("ascii",THREE.JSONLoader)};
THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader(c.manager);d.setCrossOrigin(this.crossOrigin);d.load(a,function(d){c.parse(JSON.parse(d),b,a)})},setCrossOrigin:function(a){this.crossOrigin=a},addGeometryHandler:function(a,b){this.geometryHandlers[a]={loaderClass:b}},addHierarchyHandler:function(a,b){this.hierarchyHandlers[a]={loaderClass:b}},parse:function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:w+"/"+a}function e(){f(t.scene,
v.objects)}function f(a,b){var c,e,h,j,k,n,l;for(l in b){var m=t.objects[l],C=b[l];if(void 0===m){if(C.type&&C.type in p.hierarchyHandlers){if(void 0===C.loading){e={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};h={};for(var w in C)w in e||(h[w]=C[w]);E=t.materials[C.material];C.loading=!0;e=p.hierarchyHandlers[C.type].loaderObject;e.options?e.load(d(C.url,v.urlBaseType),i(l,a,E,C)):e.load(d(C.url,v.urlBaseType),i(l,
a,E,C),h)}}else if(void 0!==C.geometry){if(u=t.geometries[C.geometry]){m=!1;E=t.materials[C.material];m=E instanceof THREE.ShaderMaterial;h=C.position;j=C.rotation;k=C.scale;c=C.matrix;n=C.quaternion;C.material||(E=new THREE.MeshFaceMaterial(t.face_materials[C.geometry]));E instanceof THREE.MeshFaceMaterial&&0===E.materials.length&&(E=new THREE.MeshFaceMaterial(t.face_materials[C.geometry]));if(E instanceof THREE.MeshFaceMaterial)for(e=0;e<E.materials.length;e++)m=m||E.materials[e]instanceof THREE.ShaderMaterial;
m&&u.computeTangents();C.skin?m=new THREE.SkinnedMesh(u,E):C.morph?(m=new THREE.MorphAnimMesh(u,E),void 0!==C.duration&&(m.duration=C.duration),void 0!==C.time&&(m.time=C.time),void 0!==C.mirroredLoop&&(m.mirroredLoop=C.mirroredLoop),E.morphNormals&&u.computeMorphNormals()):m=new THREE.Mesh(u,E);m.name=l;c?(m.matrixAutoUpdate=!1,m.matrix.set(c[0],c[1],c[2],c[3],c[4],c[5],c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])):(m.position.fromArray(h),n?m.quaternion.fromArray(n):m.rotation.fromArray(j),
m.scale.fromArray(k));m.visible=C.visible;m.castShadow=C.castShadow;m.receiveShadow=C.receiveShadow;a.add(m);t.objects[l]=m}}else"DirectionalLight"===C.type||"PointLight"===C.type||"AmbientLight"===C.type?(z=void 0!==C.color?C.color:16777215,O=void 0!==C.intensity?C.intensity:1,"DirectionalLight"===C.type?(h=C.direction,F=new THREE.DirectionalLight(z,O),F.position.fromArray(h),C.target&&(P.push({object:F,targetName:C.target}),F.target=null)):"PointLight"===C.type?(h=C.position,e=C.distance,F=new THREE.PointLight(z,
O,e),F.position.fromArray(h)):"AmbientLight"===C.type&&(F=new THREE.AmbientLight(z)),a.add(F),F.name=l,t.lights[l]=F,t.objects[l]=F):"PerspectiveCamera"===C.type||"OrthographicCamera"===C.type?(h=C.position,j=C.rotation,n=C.quaternion,"PerspectiveCamera"===C.type?x=new THREE.PerspectiveCamera(C.fov,C.aspect,C.near,C.far):"OrthographicCamera"===C.type&&(x=new THREE.OrthographicCamera(C.left,C.right,C.top,C.bottom,C.near,C.far)),x.name=l,x.position.fromArray(h),void 0!==n?x.quaternion.fromArray(n):
void 0!==j&&x.rotation.fromArray(j),a.add(x),t.cameras[l]=x,t.objects[l]=x):(h=C.position,j=C.rotation,k=C.scale,n=C.quaternion,m=new THREE.Object3D,m.name=l,m.position.fromArray(h),n?m.quaternion.fromArray(n):m.rotation.fromArray(j),m.scale.fromArray(k),m.visible=void 0!==C.visible?C.visible:!1,a.add(m),t.objects[l]=m,t.empties[l]=m);if(m){if(void 0!==C.userData)for(var r in C.userData)m.userData[r]=C.userData[r];if(void 0!==C.groups)for(e=0;e<C.groups.length;e++)h=C.groups[e],void 0===t.groups[h]&&
(t.groups[h]=[]),t.groups[h].push(l)}}void 0!==m&&void 0!==C.children&&f(m,C.children)}}function h(a){return function(b,c){b.name=a;t.geometries[a]=b;t.face_materials[a]=c;e();Q-=1;p.onLoadComplete();k()}}function i(a,b,c,d){return function(f){var f=f.content?f.content:f.dae?f.scene:f,h=d.rotation,i=d.quaternion,j=d.scale;f.position.fromArray(d.position);i?f.quaternion.fromArray(i):f.rotation.fromArray(h);f.scale.fromArray(j);c&&f.traverse(function(a){a.material=c});var l=void 0!==d.visible?d.visible:
!0;f.traverse(function(a){a.visible=l});b.add(f);f.name=a;t.objects[a]=f;e();Q-=1;p.onLoadComplete();k()}}function j(a){return function(b,c){b.name=a;t.geometries[a]=b;t.face_materials[a]=c}}function k(){p.callbackProgress({totalModels:da,totalTextures:W,loadedModels:da-Q,loadedTextures:W-I},t);p.onLoadProgress();if(0===Q&&0===I){for(var a=0;a<P.length;a++){var c=P[a],d=t.objects[c.targetName];d?c.object.target=d:(c.object.target=new THREE.Object3D,t.scene.add(c.object.target));c.object.target.userData.targetInverse=
c.object}b(t)}}function m(a,b){b(a);if(void 0!==a.children)for(var c in a.children)m(a.children[c],b)}var p=this,w=THREE.Loader.prototype.extractUrlBase(c),u,E,x,n,B,F,z,O,Q,I,da,W,t,P=[],v=a,L;for(L in this.geometryHandlers)a=this.geometryHandlers[L].loaderClass,this.geometryHandlers[L].loaderObject=new a;for(L in this.hierarchyHandlers)a=this.hierarchyHandlers[L].loaderClass,this.hierarchyHandlers[L].loaderObject=new a;I=Q=0;t={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},
textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};if(v.transform&&(L=v.transform.position,a=v.transform.rotation,c=v.transform.scale,L&&t.scene.position.fromArray(L),a&&t.scene.rotation.fromArray(a),c&&t.scene.scale.fromArray(c),L||a||c))t.scene.updateMatrix(),t.scene.updateMatrixWorld();L=function(a){return function(){I-=a;k();p.onLoadComplete()}};for(var T in v.fogs)a=v.fogs[T],"linear"===a.type?n=new THREE.Fog(0,a.near,a.far):"exp2"===a.type&&(n=new THREE.FogExp2(0,a.density)),
a=a.color,n.color.setRGB(a[0],a[1],a[2]),t.fogs[T]=n;for(var l in v.geometries)n=v.geometries[l],n.type in this.geometryHandlers&&(Q+=1,p.onLoadStart());for(var R in v.objects)m(v.objects[R],function(a){a.type&&a.type in p.hierarchyHandlers&&(Q+=1,p.onLoadStart())});da=Q;for(l in v.geometries)if(n=v.geometries[l],"cube"===n.type)u=new THREE.CubeGeometry(n.width,n.height,n.depth,n.widthSegments,n.heightSegments,n.depthSegments),u.name=l,t.geometries[l]=u;else if("plane"===n.type)u=new THREE.PlaneGeometry(n.width,
n.height,n.widthSegments,n.heightSegments),u.name=l,t.geometries[l]=u;else if("sphere"===n.type)u=new THREE.SphereGeometry(n.radius,n.widthSegments,n.heightSegments),u.name=l,t.geometries[l]=u;else if("cylinder"===n.type)u=new THREE.CylinderGeometry(n.topRad,n.botRad,n.height,n.radSegs,n.heightSegs),u.name=l,t.geometries[l]=u;else if("torus"===n.type)u=new THREE.TorusGeometry(n.radius,n.tube,n.segmentsR,n.segmentsT),u.name=l,t.geometries[l]=u;else if("icosahedron"===n.type)u=new THREE.IcosahedronGeometry(n.radius,
n.subdivisions),u.name=l,t.geometries[l]=u;else if(n.type in this.geometryHandlers){R={};for(B in n)"type"!==B&&"url"!==B&&(R[B]=n[B]);this.geometryHandlers[n.type].loaderObject.load(d(n.url,v.urlBaseType),h(l),R)}else"embedded"===n.type&&(R=v.embeds[n.id],R.metadata=v.metadata,R&&(R=this.geometryHandlers.ascii.loaderObject.parse(R,""),j(l)(R.geometry,R.materials)));for(var r in v.textures)if(l=v.textures[r],l.url instanceof Array){I+=l.url.length;for(B=0;B<l.url.length;B++)p.onLoadStart()}else I+=
1,p.onLoadStart();W=I;for(r in v.textures){l=v.textures[r];void 0!==l.mapping&&void 0!==THREE[l.mapping]&&(l.mapping=new THREE[l.mapping]);if(l.url instanceof Array){R=l.url.length;n=[];for(B=0;B<R;B++)n[B]=d(l.url[B],v.urlBaseType);B=(B=/\.dds$/i.test(n[0]))?THREE.ImageUtils.loadCompressedTextureCube(n,l.mapping,L(R)):THREE.ImageUtils.loadTextureCube(n,l.mapping,L(R))}else B=/\.dds$/i.test(l.url),R=d(l.url,v.urlBaseType),n=L(1),B=B?THREE.ImageUtils.loadCompressedTexture(R,l.mapping,n):THREE.ImageUtils.loadTexture(R,
l.mapping,n),void 0!==THREE[l.minFilter]&&(B.minFilter=THREE[l.minFilter]),void 0!==THREE[l.magFilter]&&(B.magFilter=THREE[l.magFilter]),l.anisotropy&&(B.anisotropy=l.anisotropy),l.repeat&&(B.repeat.set(l.repeat[0],l.repeat[1]),1!==l.repeat[0]&&(B.wrapS=THREE.RepeatWrapping),1!==l.repeat[1]&&(B.wrapT=THREE.RepeatWrapping)),l.offset&&B.offset.set(l.offset[0],l.offset[1]),l.wrap&&(R={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==R[l.wrap[0]]&&(B.wrapS=R[l.wrap[0]]),void 0!==
R[l.wrap[1]]&&(B.wrapT=R[l.wrap[1]]));t.textures[r]=B}var ea,M;for(ea in v.materials){r=v.materials[ea];for(M in r.parameters)"envMap"===M||"map"===M||"lightMap"===M||"bumpMap"===M?r.parameters[M]=t.textures[r.parameters[M]]:"shading"===M?r.parameters[M]="flat"===r.parameters[M]?THREE.FlatShading:THREE.SmoothShading:"side"===M?r.parameters[M]="double"==r.parameters[M]?THREE.DoubleSide:"back"==r.parameters[M]?THREE.BackSide:THREE.FrontSide:"blending"===M?r.parameters[M]=r.parameters[M]in THREE?THREE[r.parameters[M]]:
THREE.NormalBlending:"combine"===M?r.parameters[M]=r.parameters[M]in THREE?THREE[r.parameters[M]]:THREE.MultiplyOperation:"vertexColors"===M?"face"==r.parameters[M]?r.parameters[M]=THREE.FaceColors:r.parameters[M]&&(r.parameters[M]=THREE.VertexColors):"wrapRGB"===M&&(L=r.parameters[M],r.parameters[M]=new THREE.Vector3(L[0],L[1],L[2]));void 0!==r.parameters.opacity&&1>r.parameters.opacity&&(r.parameters.transparent=!0);r.parameters.normalMap?(L=THREE.ShaderLib.normalmap,l=THREE.UniformsUtils.clone(L.uniforms),
B=r.parameters.color,R=r.parameters.specular,n=r.parameters.ambient,T=r.parameters.shininess,l.tNormal.value=t.textures[r.parameters.normalMap],r.parameters.normalScale&&l.uNormalScale.value.set(r.parameters.normalScale[0],r.parameters.normalScale[1]),r.parameters.map&&(l.tDiffuse.value=r.parameters.map,l.enableDiffuse.value=!0),r.parameters.envMap&&(l.tCube.value=r.parameters.envMap,l.enableReflection.value=!0,l.uReflectivity.value=r.parameters.reflectivity),r.parameters.lightMap&&(l.tAO.value=r.parameters.lightMap,
l.enableAO.value=!0),r.parameters.specularMap&&(l.tSpecular.value=t.textures[r.parameters.specularMap],l.enableSpecular.value=!0),r.parameters.displacementMap&&(l.tDisplacement.value=t.textures[r.parameters.displacementMap],l.enableDisplacement.value=!0,l.uDisplacementBias.value=r.parameters.displacementBias,l.uDisplacementScale.value=r.parameters.displacementScale),l.uDiffuseColor.value.setHex(B),l.uSpecularColor.value.setHex(R),l.uAmbientColor.value.setHex(n),l.uShininess.value=T,r.parameters.opacity&&
(l.uOpacity.value=r.parameters.opacity),E=new THREE.ShaderMaterial({fragmentShader:L.fragmentShader,vertexShader:L.vertexShader,uniforms:l,lights:!0,fog:!0})):E=new THREE[r.type](r.parameters);E.name=ea;t.materials[ea]=E}for(ea in v.materials)if(r=v.materials[ea],r.parameters.materials){M=[];for(B=0;B<r.parameters.materials.length;B++)M.push(t.materials[r.parameters.materials[B]]);t.materials[ea].materials=M}e();t.cameras&&v.defaults.camera&&(t.currentCamera=t.cameras[v.defaults.camera]);t.fogs&&
v.defaults.fog&&(t.scene.fog=t.fogs[v.defaults.fog]);p.callbackSync(t);k()}};THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b){var c=new THREE.ImageLoader(this.manager);c.setCrossOrigin(this.crossOrigin);c.load(a,function(a){a=new THREE.Texture(a);a.needsUpdate=!0;void 0!==b&&b(a)})},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};
THREE.Material.prototype={constructor:THREE.Material,setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]="overdraw"==b?Number(c):c}}},clone:function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;
a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);
THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture;this.useScreenCoordinates=!0;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(a);a=a||{};void 0===a.depthTest&&(this.depthTest=!this.useScreenCoordinates);
void 0===a.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates);void 0===a.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.useScreenCoordinates=this.useScreenCoordinates;a.sizeAttenuation=this.sizeAttenuation;a.scaleByViewport=this.scaleByViewport;a.alignment.copy(this.alignment);a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);a.fog=this.fog;return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Texture=function(a,b,c,d,e,f,h,i,j){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=a;this.mipmaps=[];this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==j?j:1;this.format=void 0!==h?h:THREE.RGBAFormat;this.type=void 0!==i?i:THREE.UnsignedByteType;
this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=
this.unpackAlignment;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(a,b,c,d,e,f,h,i,j,k,m){THREE.Texture.call(this,null,f,h,i,j,k,d,e,m);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(a,b,c,d,e,f,h,i,j,k,m){THREE.Texture.call(this,null,f,h,i,j,k,d,e,m);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);THREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.frustumCulled=this.sortParticles=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiplyMatrices(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(this.geometry&&void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=0;a<this.bones.length;a++)c=
this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=
THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var a=new THREE.Matrix4;return function(b){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||b)this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var b=0,c=this.children.length;b<c;b++){var d=this.children[b];d instanceof THREE.Bone?d.update(this.identityMatrix,!1):d.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=
[];b=0;for(c=this.bones.length;b<c;b++)d=new THREE.Matrix4,d.getInverse(this.bones[b].skinMatrix),this.boneInverses.push(d)}b=0;for(c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b].skinMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);this.normalizeSkinWeights()};
THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var h=a.morphTargets[e].name.match(d);if(h&&1<h.length){h=h[1];c[h]||(c[h]={start:Infinity,end:-Infinity});var i=c[h];e<i.start&&(i.start=e);e>i.end&&(i.end=e);b||(b=h)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);THREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;b<c&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object};
THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(1<this.objects.length){a.getPositionFromMatrix(c.matrixWorld);b.getPositionFromMatrix(this.matrixWorld);c=a.distanceTo(b);this.objects[0].object.visible=!0;for(var d=1,e=this.objects.length;d<e;d++)if(c>=this.objects[d].distance)this.objects[d-1].object.visible=!1,this.objects[d].object.visible=!0;else break;for(;d<e;d++)this.objects[d].object.visible=!1}}}();THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(a){THREE.Object3D.call(this);this.material=void 0!==a?a:new THREE.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.rotation3d.set(0,0,this.rotation,this.rotation3d.order);this.quaternion.setFromEuler(this.rotation3d);this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};
THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Scene.prototype.clone=function(a){void 0===a&&(a=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,a);null!==this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return a};THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(a){function b(a,b,c){for(var d=0,g=da.length;d<g;d++){var e=da[d];Pb.copy(e.color);if(e instanceof THREE.DirectionalLight){var D=eb.getPositionFromMatrix(e.matrixWorld).normalize(),f=b.dot(D);0>=f||(f*=e.intensity,c.add(Pb.multiplyScalar(f)))}else e instanceof THREE.PointLight&&(D=eb.getPositionFromMatrix(e.matrixWorld),f=b.dot(eb.subVectors(D,a).normalize()),0>=f||(f*=0==e.distance?1:1-Math.min(a.distanceTo(D)/e.distance,1),0!=f&&(f*=e.intensity,c.add(Pb.multiplyScalar(f)))))}}
function c(a,c,e,l,m,n,D,ca){O.info.render.vertices+=3;O.info.render.faces++;p(ca.opacity);w(ca.blending);xa=a.positionScreen.x;Sa=a.positionScreen.y;fa=c.positionScreen.x;ha=c.positionScreen.y;U=e.positionScreen.x;ba=e.positionScreen.y;d(xa,Sa,fa,ha,U,ba);(ca instanceof THREE.MeshLambertMaterial||ca instanceof THREE.MeshPhongMaterial)&&null===ca.map?(ab.copy(ca.color),qb.copy(ca.emissive),ca.vertexColors===THREE.FaceColors&&ab.multiply(D.color),!1===ca.wireframe&&ca.shading==THREE.SmoothShading&&
3==D.vertexNormalsLength?(qa.copy(Wa),V.copy(Wa),oa.copy(Wa),b(D.v1.positionWorld,D.vertexNormalsModel[0],qa),b(D.v2.positionWorld,D.vertexNormalsModel[1],V),b(D.v3.positionWorld,D.vertexNormalsModel[2],oa),qa.multiply(ab).add(qb),V.multiply(ab).add(qb),oa.multiply(ab).add(qb),Da.addColors(V,oa).multiplyScalar(0.5),nb=k(qa,V,oa,Da),j(xa,Sa,fa,ha,U,ba,0,0,1,0,0,1,nb)):(ka.copy(Wa),b(D.centroidModel,D.normalModel,ka),ka.multiply(ab).add(qb),!0===ca.wireframe?f(ka,ca.wireframeLinewidth,ca.wireframeLinecap,
ca.wireframeLinejoin):h(ka))):ca instanceof THREE.MeshBasicMaterial||ca instanceof THREE.MeshLambertMaterial||ca instanceof THREE.MeshPhongMaterial?null!==ca.map?ca.map.mapping instanceof THREE.UVMapping&&(Ea=D.uvs[0],i(xa,Sa,fa,ha,U,ba,Ea[l].x,Ea[l].y,Ea[m].x,Ea[m].y,Ea[n].x,Ea[n].y,ca.map)):null!==ca.envMap?ca.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(eb.copy(D.vertexNormalsModelView[l]),ra=0.5*eb.x+0.5,Bb=0.5*eb.y+0.5,eb.copy(D.vertexNormalsModelView[m]),Jb=0.5*eb.x+0.5,g=0.5*
eb.y+0.5,eb.copy(D.vertexNormalsModelView[n]),Xb=0.5*eb.x+0.5,Qb=0.5*eb.y+0.5,i(xa,Sa,fa,ha,U,ba,ra,Bb,Jb,g,Xb,Qb,ca.envMap)):(ka.copy(ca.color),ca.vertexColors===THREE.FaceColors&&ka.multiply(D.color),!0===ca.wireframe?f(ka,ca.wireframeLinewidth,ca.wireframeLinecap,ca.wireframeLinejoin):h(ka)):ca instanceof THREE.MeshDepthMaterial?(Pa=A.near,Ab=A.far,qa.r=qa.g=qa.b=1-z(a.positionScreen.z*a.positionScreen.w,Pa,Ab),V.r=V.g=V.b=1-z(c.positionScreen.z*c.positionScreen.w,Pa,Ab),oa.r=oa.g=oa.b=1-z(e.positionScreen.z*
e.positionScreen.w,Pa,Ab),Da.addColors(V,oa).multiplyScalar(0.5),nb=k(qa,V,oa,Da),j(xa,Sa,fa,ha,U,ba,0,0,1,0,0,1,nb)):ca instanceof THREE.MeshNormalMaterial&&(ca.shading==THREE.FlatShading?(a=D.normalModelView,ka.setRGB(a.x,a.y,a.z).multiplyScalar(0.5).addScalar(0.5),!0===ca.wireframe?f(ka,ca.wireframeLinewidth,ca.wireframeLinecap,ca.wireframeLinejoin):h(ka)):ca.shading==THREE.SmoothShading&&(a=D.vertexNormalsModelView[l],qa.setRGB(a.x,a.y,a.z).multiplyScalar(0.5).addScalar(0.5),a=D.vertexNormalsModelView[m],
V.setRGB(a.x,a.y,a.z).multiplyScalar(0.5).addScalar(0.5),a=D.vertexNormalsModelView[n],oa.setRGB(a.x,a.y,a.z).multiplyScalar(0.5).addScalar(0.5),Da.addColors(V,oa).multiplyScalar(0.5),nb=k(qa,V,oa,Da),j(xa,Sa,fa,ha,U,ba,0,0,1,0,0,1,nb)))}function d(a,b,c,d,g,e){l.beginPath();l.moveTo(a,b);l.lineTo(c,d);l.lineTo(g,e);l.closePath()}function e(a,b,c,d,g,e,D,f){l.beginPath();l.moveTo(a,b);l.lineTo(c,d);l.lineTo(g,e);l.lineTo(D,f);l.closePath()}function f(a,b,c,d){u(b);E(c);x(d);n(a.getStyle());l.stroke();
Fa.expandByScalar(2*b)}function h(a){B(a.getStyle());l.fill()}function i(a,b,c,d,g,e,D,f,i,Xa,j,k,wa){if(!(wa instanceof THREE.DataTexture||void 0===wa.image||0==wa.image.width)){if(!0===wa.needsUpdate){var m=wa.wrapS==THREE.RepeatWrapping,Ya=wa.wrapT==THREE.RepeatWrapping;Kb[wa.id]=l.createPattern(wa.image,!0===m&&!0===Ya?"repeat":!0===m&&!1===Ya?"repeat-x":!1===m&&!0===Ya?"repeat-y":"no-repeat");wa.needsUpdate=!1}void 0===Kb[wa.id]?B("rgba(0,0,0,1)"):B(Kb[wa.id]);var m=wa.offset.x/wa.repeat.x,Ya=
wa.offset.y/wa.repeat.y,n=wa.image.width*wa.repeat.x,p=wa.image.height*wa.repeat.y,D=(D+m)*n,f=(1-f+Ya)*p,c=c-a,d=d-b,g=g-a,e=e-b,i=(i+m)*n-D,Xa=(1-Xa+Ya)*p-f,j=(j+m)*n-D,k=(1-k+Ya)*p-f,m=i*k-j*Xa;0===m?(void 0===Lb[wa.id]&&(b=document.createElement("canvas"),b.width=wa.image.width,b.height=wa.image.height,b=b.getContext("2d"),b.drawImage(wa.image,0,0),Lb[wa.id]=b.getImageData(0,0,wa.image.width,wa.image.height).data),b=Lb[wa.id],D=4*(Math.floor(D)+Math.floor(f)*wa.image.width),ka.setRGB(b[D]/255,
b[D+1]/255,b[D+2]/255),h(ka)):(m=1/m,wa=(k*c-Xa*g)*m,Xa=(k*d-Xa*e)*m,c=(i*g-j*c)*m,d=(i*e-j*d)*m,a=a-wa*D-c*f,D=b-Xa*D-d*f,l.save(),l.transform(wa,Xa,c,d,a,D),l.fill(),l.restore())}}function j(a,b,c,d,g,e,D,f,h,i,j,k,m){var n,Ya;n=m.width-1;Ya=m.height-1;D*=n;f*=Ya;c-=a;d-=b;g-=a;e-=b;h=h*n-D;i=i*Ya-f;j=j*n-D;k=k*Ya-f;Ya=1/(h*k-j*i);n=(k*c-i*g)*Ya;i=(k*d-i*e)*Ya;c=(h*g-j*c)*Ya;d=(h*e-j*d)*Ya;a=a-n*D-c*f;b=b-i*D-d*f;l.save();l.transform(n,i,c,d,a,b);l.clip();l.drawImage(m,0,0);l.restore()}function k(a,
b,c,d){Za[0]=255*a.r|0;Za[1]=255*a.g|0;Za[2]=255*a.b|0;Za[4]=255*b.r|0;Za[5]=255*b.g|0;Za[6]=255*b.b|0;Za[8]=255*c.r|0;Za[9]=255*c.g|0;Za[10]=255*c.b|0;Za[12]=255*d.r|0;Za[13]=255*d.g|0;Za[14]=255*d.b|0;Gb.putImageData(Mb,0,0);Nb.drawImage(Ob,0,0);return Yb}function m(a,b,c){var d=b.x-a.x,g=b.y-a.y,e=d*d+g*g;0!==e&&(c/=Math.sqrt(e),d*=c,g*=c,b.x+=d,b.y+=g,a.x-=d,a.y-=g)}function p(a){ea!==a&&(ea=l.globalAlpha=a)}function w(a){M!==a&&(a===THREE.NormalBlending?l.globalCompositeOperation="source-over":
a===THREE.AdditiveBlending?l.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(l.globalCompositeOperation="darker"),M=a)}function u(a){pb!==a&&(pb=l.lineWidth=a)}function E(a){tb!==a&&(tb=l.lineCap=a)}function x(a){$a!==a&&($a=l.lineJoin=a)}function n(a){Ja!==a&&(Ja=l.strokeStyle=a)}function B(a){mb!==a&&(mb=l.fillStyle=a)}function F(a,b){if(Ka!==a||db!==b)l.setLineDash([a,b]),Ka=a,db=b}console.log("THREE.CanvasRenderer",THREE.REVISION);var z=THREE.Math.smoothstep,a=a||{},O=this,
Q,I,da,W=new THREE.Projector,t=void 0!==a.canvas?a.canvas:document.createElement("canvas"),P,v,L,T,l=t.getContext("2d"),R=new THREE.Color(0),r=0,ea=1,M=0,Ja=null,mb=null,pb=null,tb=null,$a=null,Ka=null,db=0,A,S,ja,C,Va,zb=new THREE.RenderableVertex,ob=new THREE.RenderableVertex,xa,Sa,fa,ha,U,ba,ua,na,ga,va,Ga,la,ka=new THREE.Color,qa=new THREE.Color,V=new THREE.Color,oa=new THREE.Color,Da=new THREE.Color,ab=new THREE.Color,qb=new THREE.Color,Pb=new THREE.Color,Kb={},Lb={},Pa,Ab,nb,Ea,ra,Bb,Jb,g,Xb,
Qb,Ta=new THREE.Box2,pa=new THREE.Box2,Fa=new THREE.Box2,Wa=new THREE.Color,Zb=new THREE.Color,$b=new THREE.Color,eb=new THREE.Vector3,Ob,Gb,Mb,Za,Yb,Nb,Rb=16;Ob=document.createElement("canvas");Ob.width=Ob.height=2;Gb=Ob.getContext("2d");Gb.fillStyle="rgba(0,0,0,1)";Gb.fillRect(0,0,2,2);Mb=Gb.getImageData(0,0,2,2);Za=Mb.data;Yb=document.createElement("canvas");Yb.width=Yb.height=Rb;Nb=Yb.getContext("2d");Nb.translate(-Rb/2,-Rb/2);Nb.scale(Rb,Rb);Rb--;void 0===l.setLineDash&&(l.setLineDash=void 0!==
l.mozDash?function(a){l.mozDash=null!==a[0]?a:null}:function(){});this.domElement=t;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(a,b,c){P=a*this.devicePixelRatio;v=b*this.devicePixelRatio;L=Math.floor(P/2);T=Math.floor(v/2);t.width=
P;t.height=v;1!==this.devicePixelRatio&&!1!==c&&(t.style.width=a+"px",t.style.height=b+"px");Ta.set(new THREE.Vector2(-L,-T),new THREE.Vector2(L,T));pa.set(new THREE.Vector2(-L,-T),new THREE.Vector2(L,T));ea=1;M=0;$a=tb=pb=mb=Ja=null};this.setClearColor=function(a,b){R.set(a);r=void 0!==b?b:1;pa.set(new THREE.Vector2(-L,-T),new THREE.Vector2(L,T))};this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(a,
b)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){l.setTransform(1,0,0,-1,L,T);!1===pa.empty()&&(pa.intersect(Ta),pa.expandByScalar(2),1>r&&l.clearRect(pa.min.x|0,pa.min.y|0,pa.max.x-pa.min.x|0,pa.max.y-pa.min.y|0),0<r&&(w(THREE.NormalBlending),p(1),B("rgba("+Math.floor(255*R.r)+","+Math.floor(255*R.g)+","+Math.floor(255*R.b)+","+r+")"),l.fillRect(pa.min.x|0,pa.min.y|0,pa.max.x-pa.min.x|0,pa.max.y-pa.min.y|0)),pa.makeEmpty())};this.render=function(a,g){if(!1===g instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");
else{!0===this.autoClear&&this.clear();l.setTransform(1,0,0,-1,L,T);O.info.render.vertices=0;O.info.render.faces=0;Q=W.projectScene(a,g,this.sortObjects,this.sortElements);I=Q.elements;da=Q.lights;A=g;Wa.setRGB(0,0,0);Zb.setRGB(0,0,0);$b.setRGB(0,0,0);for(var i=0,t=da.length;i<t;i++){var r=da[i],v=r.color;r instanceof THREE.AmbientLight?Wa.add(v):r instanceof THREE.DirectionalLight?Zb.add(v):r instanceof THREE.PointLight&&$b.add(v)}i=0;for(t=I.length;i<t;i++){var D=I[i],r=D.material;if(!(void 0===
r||!1===r.visible)){Fa.makeEmpty();if(D instanceof THREE.RenderableParticle){S=D;S.x*=L;S.y*=T;v=S;p(r.opacity);w(r.blending);var ca=void 0,rb=void 0,Xa=void 0,Cb=void 0,cc=void 0,wa=void 0,Kc=void 0;r instanceof THREE.ParticleBasicMaterial?null===r.map?(Xa=D.object.scale.x,Cb=D.object.scale.y,Xa*=D.scale.x*L,Cb*=D.scale.y*T,Fa.min.set(v.x-Xa,v.y-Cb),Fa.max.set(v.x+Xa,v.y+Cb),!1===Ta.isIntersectionBox(Fa)?Fa.makeEmpty():(B(r.color.getStyle()),l.save(),l.translate(v.x,v.y),l.rotate(-D.rotation),l.scale(Xa,
Cb),l.fillRect(-1,-1,2,2),l.restore())):(cc=r.map.image,wa=cc.width>>1,Kc=cc.height>>1,Xa=D.scale.x*L,Cb=D.scale.y*T,ca=Xa*wa,rb=Cb*Kc,Fa.min.set(v.x-ca,v.y-rb),Fa.max.set(v.x+ca,v.y+rb),!1===Ta.isIntersectionBox(Fa)?Fa.makeEmpty():(l.save(),l.translate(v.x,v.y),l.rotate(-D.rotation),l.scale(Xa,-Cb),l.translate(-wa,-Kc),l.drawImage(cc,0,0),l.restore())):r instanceof THREE.ParticleCanvasMaterial&&(ca=D.scale.x*L,rb=D.scale.y*T,Fa.min.set(v.x-ca,v.y-rb),Fa.max.set(v.x+ca,v.y+rb),!1===Ta.isIntersectionBox(Fa)?
Fa.makeEmpty():(n(r.color.getStyle()),B(r.color.getStyle()),l.save(),l.translate(v.x,v.y),l.rotate(-D.rotation),l.scale(ca,rb),r.program(l),l.restore()))}else if(D instanceof THREE.RenderableLine){if(S=D.v1,ja=D.v2,S.positionScreen.x*=L,S.positionScreen.y*=T,ja.positionScreen.x*=L,ja.positionScreen.y*=T,Fa.setFromPoints([S.positionScreen,ja.positionScreen]),!0===Ta.isIntersectionBox(Fa))if(v=S,ca=ja,p(r.opacity),w(r.blending),l.beginPath(),l.moveTo(v.positionScreen.x,v.positionScreen.y),l.lineTo(ca.positionScreen.x,
ca.positionScreen.y),r instanceof THREE.LineBasicMaterial){u(r.linewidth);E(r.linecap);x(r.linejoin);if(r.vertexColors!==THREE.VertexColors)n(r.color.getStyle());else if(rb=D.vertexColors[0].getStyle(),D=D.vertexColors[1].getStyle(),rb===D)n(rb);else{try{var Ya=l.createLinearGradient(v.positionScreen.x,v.positionScreen.y,ca.positionScreen.x,ca.positionScreen.y);Ya.addColorStop(0,rb);Ya.addColorStop(1,D)}catch(fd){Ya=rb}n(Ya)}l.stroke();Fa.expandByScalar(2*r.linewidth)}else r instanceof THREE.LineDashedMaterial&&
(u(r.linewidth),E(r.linecap),x(r.linejoin),n(r.color.getStyle()),F(r.dashSize,r.gapSize),l.stroke(),Fa.expandByScalar(2*r.linewidth),F(null,null))}else if(D instanceof THREE.RenderableFace3){S=D.v1;ja=D.v2;C=D.v3;if(-1>S.positionScreen.z||1<S.positionScreen.z)continue;if(-1>ja.positionScreen.z||1<ja.positionScreen.z)continue;if(-1>C.positionScreen.z||1<C.positionScreen.z)continue;S.positionScreen.x*=L;S.positionScreen.y*=T;ja.positionScreen.x*=L;ja.positionScreen.y*=T;C.positionScreen.x*=L;C.positionScreen.y*=
T;0<r.overdraw&&(m(S.positionScreen,ja.positionScreen,r.overdraw),m(ja.positionScreen,C.positionScreen,r.overdraw),m(C.positionScreen,S.positionScreen,r.overdraw));Fa.setFromPoints([S.positionScreen,ja.positionScreen,C.positionScreen]);!0===Ta.isIntersectionBox(Fa)&&c(S,ja,C,0,1,2,D,r)}else if(D instanceof THREE.RenderableFace4){S=D.v1;ja=D.v2;C=D.v3;Va=D.v4;if(-1>S.positionScreen.z||1<S.positionScreen.z)continue;if(-1>ja.positionScreen.z||1<ja.positionScreen.z)continue;if(-1>C.positionScreen.z||
1<C.positionScreen.z)continue;if(-1>Va.positionScreen.z||1<Va.positionScreen.z)continue;S.positionScreen.x*=L;S.positionScreen.y*=T;ja.positionScreen.x*=L;ja.positionScreen.y*=T;C.positionScreen.x*=L;C.positionScreen.y*=T;Va.positionScreen.x*=L;Va.positionScreen.y*=T;zb.positionScreen.copy(ja.positionScreen);ob.positionScreen.copy(Va.positionScreen);0<r.overdraw&&(m(S.positionScreen,ja.positionScreen,r.overdraw),m(ja.positionScreen,Va.positionScreen,r.overdraw),m(Va.positionScreen,S.positionScreen,
r.overdraw),m(C.positionScreen,zb.positionScreen,r.overdraw),m(C.positionScreen,ob.positionScreen,r.overdraw));Fa.setFromPoints([S.positionScreen,ja.positionScreen,C.positionScreen,Va.positionScreen]);!0===Ta.isIntersectionBox(Fa)&&(v=S,ca=ja,rb=C,Xa=Va,Cb=zb,cc=ob,O.info.render.vertices+=4,O.info.render.faces++,p(r.opacity),w(r.blending),void 0!==r.map&&null!==r.map||void 0!==r.envMap&&null!==r.envMap?(c(v,ca,Xa,0,1,3,D,r),c(Cb,rb,cc,1,2,3,D,r)):(xa=v.positionScreen.x,Sa=v.positionScreen.y,fa=ca.positionScreen.x,
ha=ca.positionScreen.y,U=rb.positionScreen.x,ba=rb.positionScreen.y,ua=Xa.positionScreen.x,na=Xa.positionScreen.y,ga=Cb.positionScreen.x,va=Cb.positionScreen.y,Ga=cc.positionScreen.x,la=cc.positionScreen.y,r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial?(ab.copy(r.color),qb.copy(r.emissive),r.vertexColors===THREE.FaceColors&&ab.multiply(D.color),!1===r.wireframe&&r.shading==THREE.SmoothShading&&4==D.vertexNormalsLength?(qa.copy(Wa),V.copy(Wa),oa.copy(Wa),Da.copy(Wa),b(D.v1.positionWorld,
D.vertexNormalsModel[0],qa),b(D.v2.positionWorld,D.vertexNormalsModel[1],V),b(D.v4.positionWorld,D.vertexNormalsModel[3],oa),b(D.v3.positionWorld,D.vertexNormalsModel[2],Da),qa.multiply(ab).add(qb),V.multiply(ab).add(qb),oa.multiply(ab).add(qb),Da.multiply(ab).add(qb),nb=k(qa,V,oa,Da),d(xa,Sa,fa,ha,ua,na),j(xa,Sa,fa,ha,ua,na,0,0,1,0,0,1,nb),d(ga,va,U,ba,Ga,la),j(ga,va,U,ba,Ga,la,1,0,1,1,0,1,nb)):(ka.copy(Wa),b(D.centroidModel,D.normalModel,ka),ka.multiply(ab).add(qb),e(xa,Sa,fa,ha,U,ba,ua,na),!0===
r.wireframe?f(ka,r.wireframeLinewidth,r.wireframeLinecap,r.wireframeLinejoin):h(ka))):r instanceof THREE.MeshBasicMaterial?(ka.copy(r.color),r.vertexColors===THREE.FaceColors&&ka.multiply(D.color),e(xa,Sa,fa,ha,U,ba,ua,na),!0===r.wireframe?f(ka,r.wireframeLinewidth,r.wireframeLinecap,r.wireframeLinejoin):h(ka)):r instanceof THREE.MeshNormalMaterial?(v=void 0,r.shading==THREE.FlatShading?(v=D.normalModelView,ka.setRGB(v.x,v.y,v.z).multiplyScalar(0.5).addScalar(0.5),e(xa,Sa,fa,ha,U,ba,ua,na),!0===r.wireframe?
f(ka,r.wireframeLinewidth,r.wireframeLinecap,r.wireframeLinejoin):h(ka)):r.shading==THREE.SmoothShading&&(v=D.vertexNormalsModelView[0],qa.setRGB(v.x,v.y,v.z).multiplyScalar(0.5).addScalar(0.5),v=D.vertexNormalsModelView[1],V.setRGB(v.x,v.y,v.z).multiplyScalar(0.5).addScalar(0.5),v=D.vertexNormalsModelView[3],oa.setRGB(v.x,v.y,v.z).multiplyScalar(0.5).addScalar(0.5),v=D.vertexNormalsModelView[2],Da.setRGB(v.x,v.y,v.z).multiplyScalar(0.5).addScalar(0.5),nb=k(qa,V,oa,Da),d(xa,Sa,fa,ha,ua,na),j(xa,Sa,
fa,ha,ua,na,0,0,1,0,0,1,nb),d(ga,va,U,ba,Ga,la),j(ga,va,U,ba,Ga,la,1,0,1,1,0,1,nb))):r instanceof THREE.MeshDepthMaterial&&(Pa=A.near,Ab=A.far,qa.r=qa.g=qa.b=1-z(v.positionScreen.z*v.positionScreen.w,Pa,Ab),V.r=V.g=V.b=1-z(ca.positionScreen.z*ca.positionScreen.w,Pa,Ab),oa.r=oa.g=oa.b=1-z(Xa.positionScreen.z*Xa.positionScreen.w,Pa,Ab),Da.r=Da.g=Da.b=1-z(rb.positionScreen.z*rb.positionScreen.w,Pa,Ab),nb=k(qa,V,oa,Da),d(xa,Sa,fa,ha,ua,na),j(xa,Sa,fa,ha,ua,na,0,0,1,0,0,1,nb),d(ga,va,U,ba,Ga,la),j(ga,
va,U,ba,Ga,la,1,0,1,1,0,1,nb))))}pa.union(Fa)}}l.setTransform(1,0,0,1,0,0)}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",
lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,
THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,
THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,
THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,
THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",
value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,
THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",
value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",
value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",
value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},
depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};THREE.WebGLRenderer=function(a){function b(a){if(a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)g.deleteBuffer(a.__webglCustomAttributesList[b].buffer)}function c(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var i=1;"v2"===f.type?i=2:"v3"===f.type?i=3:"v4"===f.type?
i=4:"c"===f.type&&(i=3);f.size=i;f.array=new Float32Array(c*i);f.buffer=g.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function d(a,b){var c=b.geometry,d=a.faces3,i=a.faces4,j=3*d.length+4*i.length,k=1*d.length+2*i.length,i=3*d.length+4*i.length,d=e(b,a),m=h(d),Ya=f(d),n=d.vertexColors?d.vertexColors:!1;a.__vertexArray=new Float32Array(3*j);Ya&&(a.__normalArray=new Float32Array(3*j));c.hasTangents&&(a.__tangentArray=new Float32Array(4*j));n&&
(a.__colorArray=new Float32Array(3*j));if(m){if(0<c.faceUvs.length||0<c.faceVertexUvs.length)a.__uvArray=new Float32Array(2*j);if(1<c.faceUvs.length||1<c.faceVertexUvs.length)a.__uv2Array=new Float32Array(2*j)}b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*j),a.__skinWeightArray=new Float32Array(4*j));a.__faceArray=new Uint16Array(3*k);a.__lineArray=new Uint16Array(2*i);if(a.numMorphTargets){a.__morphTargetsArrays=[];c=0;for(m=a.numMorphTargets;c<
m;c++)a.__morphTargetsArrays.push(new Float32Array(3*j))}if(a.numMorphNormals){a.__morphNormalsArrays=[];c=0;for(m=a.numMorphNormals;c<m;c++)a.__morphNormalsArrays.push(new Float32Array(3*j))}a.__webglFaceCount=3*k;a.__webglLineCount=2*i;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var l in d.attributes){var k=d.attributes[l],c={},r;for(r in k)c[r]=k[r];if(!c.__webglInitialized||c.createUniqueBuffers)c.__webglInitialized=!0,i=1,"v2"===c.type?i=2:
"v3"===c.type?i=3:"v4"===c.type?i=4:"c"===c.type&&(i=3),c.size=i,c.array=new Float32Array(j*i),c.buffer=g.createBuffer(),c.buffer.belongsToAttribute=l,k.needsUpdate=!0,c.__original=k;a.__webglCustomAttributesList.push(c)}}a.__inittedArrays=!0}function e(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function f(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===
THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function h(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function i(a){Lb[a]||(g.enableVertexAttribArray(a),Lb[a]=!0)}function j(){for(var a in Lb)Lb[a]&&(g.disableVertexAttribArray(a),Lb[a]=!1)}function k(a,b){return a.z!==b.z?b.z-a.z:a.id-b.id}function m(a,b){return b[0]-a[0]}function p(a,b,c){if(a.length)for(var d=0,g=a.length;d<g;d++)xa=C=null,zb=ob=U=ha=Ga=va=ba=-1,Bb=!0,a[d].render(b,
c,Pb,Kb),xa=C=null,zb=ob=U=ha=Ga=va=ba=-1,Bb=!0}function w(a,b,c,d,g,e,f,i){var h,j,k,m;b?(j=a.length-1,m=b=-1):(j=0,b=a.length,m=1);for(var n=j;n!==b;n+=m)if(h=a[n],h.render){j=h.object;k=h.buffer;if(i)h=i;else{h=h[c];if(!h)continue;f&&A.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);A.setDepthTest(h.depthTest);A.setDepthWrite(h.depthWrite);P(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}A.setMaterialFaces(h);k instanceof THREE.BufferGeometry?A.renderBufferDirect(d,g,
e,h,k,j):A.renderBuffer(d,g,e,h,k,j)}}function u(a,b,c,d,g,e,f){for(var i,h,j=0,k=a.length;j<k;j++)if(i=a[j],h=i.object,h.visible){if(f)i=f;else{i=i[b];if(!i)continue;e&&A.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst);A.setDepthTest(i.depthTest);A.setDepthWrite(i.depthWrite);P(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}A.renderImmediateObject(c,d,g,i,h)}}function E(a,b){var e,f,i,h;if(void 0===a.__webglInit&&(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=
new THREE.Matrix3,void 0!==a.geometry&&void 0===a.geometry.__webglInit&&(a.geometry.__webglInit=!0,a.geometry.addEventListener("dispose",pc)),f=a.geometry,void 0!==f))if(f instanceof THREE.BufferGeometry){var j,k;for(j in f.attributes)k="index"===j?g.ELEMENT_ARRAY_BUFFER:g.ARRAY_BUFFER,h=f.attributes[j],void 0===h.numItems&&(h.numItems=h.array.length),h.buffer=g.createBuffer(),g.bindBuffer(k,h.buffer),g.bufferData(k,h.array,g.STATIC_DRAW)}else if(a instanceof THREE.Mesh){i=a.material;if(void 0===
f.geometryGroups){j=f;var m,n,l,r,p;k={};var u=j.morphTargets.length,v=j.morphNormals.length,t=i instanceof THREE.MeshFaceMaterial;j.geometryGroups={};i=0;for(m=j.faces.length;i<m;i++)n=j.faces[i],l=t?n.materialIndex:0,void 0===k[l]&&(k[l]={hash:l,counter:0}),p=k[l].hash+"_"+k[l].counter,void 0===j.geometryGroups[p]&&(j.geometryGroups[p]={faces3:[],faces4:[],materialIndex:l,vertices:0,numMorphTargets:u,numMorphNormals:v}),r=n instanceof THREE.Face3?3:4,65535<j.geometryGroups[p].vertices+r&&(k[l].counter+=
1,p=k[l].hash+"_"+k[l].counter,void 0===j.geometryGroups[p]&&(j.geometryGroups[p]={faces3:[],faces4:[],materialIndex:l,vertices:0,numMorphTargets:u,numMorphNormals:v})),n instanceof THREE.Face3?j.geometryGroups[p].faces3.push(i):j.geometryGroups[p].faces4.push(i),j.geometryGroups[p].vertices+=r;j.geometryGroupsList=[];for(h in j.geometryGroups)j.geometryGroups[h].id=Sa++,j.geometryGroupsList.push(j.geometryGroups[h])}for(e in f.geometryGroups)if(h=f.geometryGroups[e],!h.__webglVertexBuffer){j=h;j.__webglVertexBuffer=
g.createBuffer();j.__webglNormalBuffer=g.createBuffer();j.__webglTangentBuffer=g.createBuffer();j.__webglColorBuffer=g.createBuffer();j.__webglUVBuffer=g.createBuffer();j.__webglUV2Buffer=g.createBuffer();j.__webglSkinIndicesBuffer=g.createBuffer();j.__webglSkinWeightsBuffer=g.createBuffer();j.__webglFaceBuffer=g.createBuffer();j.__webglLineBuffer=g.createBuffer();u=k=void 0;if(j.numMorphTargets){j.__webglMorphTargetsBuffers=[];k=0;for(u=j.numMorphTargets;k<u;k++)j.__webglMorphTargetsBuffers.push(g.createBuffer())}if(j.numMorphNormals){j.__webglMorphNormalsBuffers=
[];k=0;for(u=j.numMorphNormals;k<u;k++)j.__webglMorphNormalsBuffers.push(g.createBuffer())}A.info.memory.geometries++;d(h,a);f.verticesNeedUpdate=!0;f.morphTargetsNeedUpdate=!0;f.elementsNeedUpdate=!0;f.uvsNeedUpdate=!0;f.normalsNeedUpdate=!0;f.tangentsNeedUpdate=!0;f.colorsNeedUpdate=!0}}else a instanceof THREE.Ribbon?f.__webglVertexBuffer||(h=f,h.__webglVertexBuffer=g.createBuffer(),h.__webglColorBuffer=g.createBuffer(),h.__webglNormalBuffer=g.createBuffer(),A.info.memory.geometries++,h=f,j=h.vertices.length,
h.__vertexArray=new Float32Array(3*j),h.__colorArray=new Float32Array(3*j),h.__normalArray=new Float32Array(3*j),h.__webglVertexCount=j,c(h,a),f.verticesNeedUpdate=!0,f.colorsNeedUpdate=!0,f.normalsNeedUpdate=!0):a instanceof THREE.Line?f.__webglVertexBuffer||(h=f,h.__webglVertexBuffer=g.createBuffer(),h.__webglColorBuffer=g.createBuffer(),h.__webglLineDistanceBuffer=g.createBuffer(),A.info.memory.geometries++,h=f,j=h.vertices.length,h.__vertexArray=new Float32Array(3*j),h.__colorArray=new Float32Array(3*
j),h.__lineDistanceArray=new Float32Array(1*j),h.__webglLineCount=j,c(h,a),f.verticesNeedUpdate=!0,f.colorsNeedUpdate=!0,f.lineDistancesNeedUpdate=!0):a instanceof THREE.ParticleSystem&&!f.__webglVertexBuffer&&(h=f,h.__webglVertexBuffer=g.createBuffer(),h.__webglColorBuffer=g.createBuffer(),A.info.memory.geometries++,h=f,j=h.vertices.length,h.__vertexArray=new Float32Array(3*j),h.__colorArray=new Float32Array(3*j),h.__sortArray=[],h.__webglParticleCount=j,c(h,a),f.verticesNeedUpdate=!0,f.colorsNeedUpdate=
!0);if(void 0===a.__webglActive){if(a instanceof THREE.Mesh)if(f=a.geometry,f instanceof THREE.BufferGeometry)x(b.__webglObjects,f,a);else{if(f instanceof THREE.Geometry)for(e in f.geometryGroups)h=f.geometryGroups[e],x(b.__webglObjects,h,a)}else a instanceof THREE.Ribbon||a instanceof THREE.Line||a instanceof THREE.ParticleSystem?(f=a.geometry,x(b.__webglObjects,f,a)):a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback?b.__webglObjectsImmediate.push({id:null,object:a,opaque:null,
transparent:null,z:0}):a instanceof THREE.Sprite?b.__webglSprites.push(a):a instanceof THREE.LensFlare&&b.__webglFlares.push(a);a.__webglActive=!0}}function x(a,b,c){a.push({id:null,buffer:b,object:c,opaque:null,transparent:null,z:0})}function n(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function B(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function F(a,b){a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem||a instanceof THREE.Ribbon||a instanceof
THREE.Line?z(b.__webglObjects,a):a instanceof THREE.Sprite?O(b.__webglSprites,a):a instanceof THREE.LensFlare?O(b.__webglFlares,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&z(b.__webglObjectsImmediate,a);delete a.__webglActive}function z(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function O(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function Q(a,b,c,d,e){fa=0;d.needsUpdate&&(d.program&&xc(d),A.initMaterial(d,b,c,e),d.needsUpdate=
!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(A.maxMorphTargets));var f=!1,h=d.program,i=h.uniforms,j=d.uniforms;h!==C&&(g.useProgram(h),C=h,f=!0);d.id!==zb&&(zb=d.id,f=!0);if(f||a!==xa)g.uniformMatrix4fv(i.projectionMatrix,!1,a.projectionMatrix.elements),a!==xa&&(xa=a);if(d.skinning)if(Gb&&e.useVertexTexture){if(null!==i.boneTexture){var k=I();g.uniform1i(i.boneTexture,k);A.setTexture(e.boneTexture,k)}}else null!==i.boneGlobalMatrices&&g.uniformMatrix4fv(i.boneGlobalMatrices,
!1,e.boneMatrices);if(f){c&&d.fog&&(j.fogColor.value=c.color,c instanceof THREE.Fog?(j.fogNear.value=c.near,j.fogFar.value=c.far):c instanceof THREE.FogExp2&&(j.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(Bb){for(var m,l=k=0,n=0,p,u,v,t=Jb,x=t.directional.colors,w=t.directional.positions,B=t.point.colors,z=t.point.positions,E=t.point.distances,F=t.spot.colors,L=t.spot.positions,O=t.spot.distances,y=t.spot.directions,N=
t.spot.anglesCos,M=t.spot.exponents,G=t.hemi.skyColors,Q=t.hemi.groundColors,P=t.hemi.positions,R=0,S=0,U=0,ba=0,ga=0,J=0,K=0,H=0,$=m=0,c=v=$=0,f=b.length;c<f;c++)m=b[c],m.onlyShadow||(p=m.color,u=m.intensity,v=m.distance,m instanceof THREE.AmbientLight?m.visible&&(A.gammaInput?(k+=p.r*p.r,l+=p.g*p.g,n+=p.b*p.b):(k+=p.r,l+=p.g,n+=p.b)):m instanceof THREE.DirectionalLight?(ga+=1,m.visible&&(ra.getPositionFromMatrix(m.matrixWorld),Ea.getPositionFromMatrix(m.target.matrixWorld),ra.sub(Ea),ra.normalize(),
0===ra.x&&0===ra.y&&0===ra.z||(m=3*R,w[m]=ra.x,w[m+1]=ra.y,w[m+2]=ra.z,A.gammaInput?da(x,m,p,u*u):W(x,m,p,u),R+=1))):m instanceof THREE.PointLight?(J+=1,m.visible&&($=3*S,A.gammaInput?da(B,$,p,u*u):W(B,$,p,u),Ea.getPositionFromMatrix(m.matrixWorld),z[$]=Ea.x,z[$+1]=Ea.y,z[$+2]=Ea.z,E[S]=v,S+=1)):m instanceof THREE.SpotLight?(K+=1,m.visible&&($=3*U,A.gammaInput?da(F,$,p,u*u):W(F,$,p,u),Ea.getPositionFromMatrix(m.matrixWorld),L[$]=Ea.x,L[$+1]=Ea.y,L[$+2]=Ea.z,O[U]=v,ra.copy(Ea),Ea.getPositionFromMatrix(m.target.matrixWorld),
ra.sub(Ea),ra.normalize(),y[$]=ra.x,y[$+1]=ra.y,y[$+2]=ra.z,N[U]=Math.cos(m.angle),M[U]=m.exponent,U+=1)):m instanceof THREE.HemisphereLight&&(H+=1,m.visible&&(ra.getPositionFromMatrix(m.matrixWorld),ra.normalize(),0===ra.x&&0===ra.y&&0===ra.z||(v=3*ba,P[v]=ra.x,P[v+1]=ra.y,P[v+2]=ra.z,p=m.color,m=m.groundColor,A.gammaInput?(u*=u,da(G,v,p,u),da(Q,v,m,u)):(W(G,v,p,u),W(Q,v,m,u)),ba+=1))));c=3*R;for(f=Math.max(x.length,3*ga);c<f;c++)x[c]=0;c=3*S;for(f=Math.max(B.length,3*J);c<f;c++)B[c]=0;c=3*U;for(f=
Math.max(F.length,3*K);c<f;c++)F[c]=0;c=3*ba;for(f=Math.max(G.length,3*H);c<f;c++)G[c]=0;c=3*ba;for(f=Math.max(Q.length,3*H);c<f;c++)Q[c]=0;t.directional.length=R;t.point.length=S;t.spot.length=U;t.hemi.length=ba;t.ambient[0]=k;t.ambient[1]=l;t.ambient[2]=n;Bb=!1}c=Jb;j.ambientLightColor.value=c.ambient;j.directionalLightColor.value=c.directional.colors;j.directionalLightDirection.value=c.directional.positions;j.pointLightColor.value=c.point.colors;j.pointLightPosition.value=c.point.positions;j.pointLightDistance.value=
c.point.distances;j.spotLightColor.value=c.spot.colors;j.spotLightPosition.value=c.spot.positions;j.spotLightDistance.value=c.spot.distances;j.spotLightDirection.value=c.spot.directions;j.spotLightAngleCos.value=c.spot.anglesCos;j.spotLightExponent.value=c.spot.exponents;j.hemisphereLightSkyColor.value=c.hemi.skyColors;j.hemisphereLightGroundColor.value=c.hemi.groundColors;j.hemisphereLightDirection.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||
d instanceof THREE.MeshPhongMaterial){j.opacity.value=d.opacity;A.gammaInput?j.diffuse.value.copyGammaToLinear(d.color):j.diffuse.value=d.color;j.map.value=d.map;j.lightMap.value=d.lightMap;j.specularMap.value=d.specularMap;d.bumpMap&&(j.bumpMap.value=d.bumpMap,j.bumpScale.value=d.bumpScale);d.normalMap&&(j.normalMap.value=d.normalMap,j.normalScale.value.copy(d.normalScale));var V;d.map?V=d.map:d.specularMap?V=d.specularMap:d.normalMap?V=d.normalMap:d.bumpMap&&(V=d.bumpMap);void 0!==V&&(c=V.offset,
V=V.repeat,j.offsetRepeat.value.set(c.x,c.y,V.x,V.y));j.envMap.value=d.envMap;j.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;j.reflectivity.value=d.reflectivity;j.refractionRatio.value=d.refractionRatio;j.combine.value=d.combine;j.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(j.diffuse.value=d.color,j.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(j.diffuse.value=d.color,j.opacity.value=
d.opacity,j.dashSize.value=d.dashSize,j.totalSize.value=d.dashSize+d.gapSize,j.scale.value=d.scale):d instanceof THREE.ParticleBasicMaterial?(j.psColor.value=d.color,j.opacity.value=d.opacity,j.size.value=d.size,j.scale.value=ea.height/2,j.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(j.shininess.value=d.shininess,A.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive),j.specular.value.copyGammaToLinear(d.specular)):(j.ambient.value=d.ambient,
j.emissive.value=d.emissive,j.specular.value=d.specular),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(A.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(j.mNear.value=a.near,j.mFar.value=a.far,j.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(j.opacity.value=
d.opacity);if(e.receiveShadow&&!d._shadowPass&&j.shadowMatrix){c=V=0;for(f=b.length;c<f;c++)if(k=b[c],k.castShadow&&(k instanceof THREE.SpotLight||k instanceof THREE.DirectionalLight&&!k.shadowCascade))j.shadowMap.value[V]=k.shadowMap,j.shadowMapSize.value[V]=k.shadowMapSize,j.shadowMatrix.value[V]=k.shadowMatrix,j.shadowDarkness.value[V]=k.shadowDarkness,j.shadowBias.value[V]=k.shadowBias,V++}b=d.uniformsList;j=0;for(V=b.length;j<V;j++)if(f=h.uniforms[b[j][1]])if(c=b[j][0],l=c.type,k=c.value,"i"===
l)g.uniform1i(f,k);else if("f"===l)g.uniform1f(f,k);else if("v2"===l)g.uniform2f(f,k.x,k.y);else if("v3"===l)g.uniform3f(f,k.x,k.y,k.z);else if("v4"===l)g.uniform4f(f,k.x,k.y,k.z,k.w);else if("c"===l)g.uniform3f(f,k.r,k.g,k.b);else if("iv1"===l)g.uniform1iv(f,k);else if("iv"===l)g.uniform3iv(f,k);else if("fv1"===l)g.uniform1fv(f,k);else if("fv"===l)g.uniform3fv(f,k);else if("v2v"===l){void 0===c._array&&(c._array=new Float32Array(2*k.length));l=0;for(n=k.length;l<n;l++)t=2*l,c._array[t]=k[l].x,c._array[t+
1]=k[l].y;g.uniform2fv(f,c._array)}else if("v3v"===l){void 0===c._array&&(c._array=new Float32Array(3*k.length));l=0;for(n=k.length;l<n;l++)t=3*l,c._array[t]=k[l].x,c._array[t+1]=k[l].y,c._array[t+2]=k[l].z;g.uniform3fv(f,c._array)}else if("v4v"===l){void 0===c._array&&(c._array=new Float32Array(4*k.length));l=0;for(n=k.length;l<n;l++)t=4*l,c._array[t]=k[l].x,c._array[t+1]=k[l].y,c._array[t+2]=k[l].z,c._array[t+3]=k[l].w;g.uniform4fv(f,c._array)}else if("m4"===l)void 0===c._array&&(c._array=new Float32Array(16)),
k.flattenToArray(c._array),g.uniformMatrix4fv(f,!1,c._array);else if("m4v"===l){void 0===c._array&&(c._array=new Float32Array(16*k.length));l=0;for(n=k.length;l<n;l++)k[l].flattenToArrayOffset(c._array,16*l);g.uniformMatrix4fv(f,!1,c._array)}else if("t"===l){if(t=k,k=I(),g.uniform1i(f,k),t)if(t.image instanceof Array&&6===t.image.length){if(c=t,f=k,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.addEventListener("dispose",kc),c.image.__webglTextureCube=g.createTexture(),A.info.memory.textures++);
g.activeTexture(g.TEXTURE0+f);g.bindTexture(g.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL,c.flipY);f=c instanceof THREE.CompressedTexture;k=[];for(l=0;6>l;l++)n=k,t=l,A.autoScaleCubemaps&&!f?(x=c.image[l],B=$b,x.width<=B&&x.height<=B||(z=Math.max(x.width,x.height),w=Math.floor(x.width*B/z),B=Math.floor(x.height*B/z),z=document.createElement("canvas"),z.width=w,z.height=B,z.getContext("2d").drawImage(x,0,0,x.width,x.height,0,0,w,B),x=z)):x=c.image[l],n[t]=x;l=k[0];
n=0===(l.width&l.width-1)&&0===(l.height&l.height-1);t=r(c.format);x=r(c.type);T(g.TEXTURE_CUBE_MAP,c,n);for(l=0;6>l;l++)if(f){B=k[l].mipmaps;z=0;for(E=B.length;z<E;z++)w=B[z],g.compressedTexImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+l,z,t,w.width,w.height,0,w.data)}else g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,t,t,x,k[l]);c.generateMipmaps&&n&&g.generateMipmap(g.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else g.activeTexture(g.TEXTURE0+f),g.bindTexture(g.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else t instanceof
THREE.WebGLRenderTargetCube?(c=t,g.activeTexture(g.TEXTURE0+k),g.bindTexture(g.TEXTURE_CUBE_MAP,c.__webglTexture)):A.setTexture(t,k)}else if("tv"===l){void 0===c._array&&(c._array=[]);l=0;for(n=c.value.length;l<n;l++)c._array[l]=I();g.uniform1iv(f,c._array);l=0;for(n=c.value.length;l<n;l++)t=c.value[l],k=c._array[l],t&&A.setTexture(t,k)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+l);if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==
i.cameraPosition)Ea.getPositionFromMatrix(a.matrixWorld),g.uniform3f(i.cameraPosition,Ea.x,Ea.y,Ea.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==i.viewMatrix&&g.uniformMatrix4fv(i.viewMatrix,!1,a.matrixWorldInverse.elements)}g.uniformMatrix4fv(i.modelViewMatrix,!1,e._modelViewMatrix.elements);i.normalMatrix&&g.uniformMatrix3fv(i.normalMatrix,!1,e._normalMatrix.elements);null!==i.modelMatrix&&g.uniformMatrix4fv(i.modelMatrix,
!1,e.matrixWorld.elements);return h}function I(){var a=fa;a>=Wa&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Wa);fa+=1;return a}function da(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function W(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function t(a){a!==V&&(g.lineWidth(a),V=a)}function P(a,b,c){la!==a&&(a?g.enable(g.POLYGON_OFFSET_FILL):g.disable(g.POLYGON_OFFSET_FILL),la=a);if(a&&(ka!==b||qa!==c))g.polygonOffset(b,c),ka=b,qa=c}
function v(a){for(var a=a.split("\n"),b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function L(a,b){var c;"fragment"===a?c=g.createShader(g.FRAGMENT_SHADER):"vertex"===a&&(c=g.createShader(g.VERTEX_SHADER));g.shaderSource(c,b);g.compileShader(c);return!g.getShaderParameter(c,g.COMPILE_STATUS)?(console.error(g.getShaderInfoLog(c)),console.error(v(b)),null):c}function T(a,b,c){c?(g.texParameteri(a,g.TEXTURE_WRAP_S,r(b.wrapS)),g.texParameteri(a,g.TEXTURE_WRAP_T,r(b.wrapT)),g.texParameteri(a,
g.TEXTURE_MAG_FILTER,r(b.magFilter)),g.texParameteri(a,g.TEXTURE_MIN_FILTER,r(b.minFilter))):(g.texParameteri(a,g.TEXTURE_WRAP_S,g.CLAMP_TO_EDGE),g.texParameteri(a,g.TEXTURE_WRAP_T,g.CLAMP_TO_EDGE),g.texParameteri(a,g.TEXTURE_MAG_FILTER,R(b.magFilter)),g.texParameteri(a,g.TEXTURE_MIN_FILTER,R(b.minFilter)));if(Ta&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))g.texParameterf(a,Ta.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,eb)),b.__oldAnisotropy=b.anisotropy}function l(a,b){g.bindRenderbuffer(g.RENDERBUFFER,
a);b.depthBuffer&&!b.stencilBuffer?(g.renderbufferStorage(g.RENDERBUFFER,g.DEPTH_COMPONENT16,b.width,b.height),g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_ATTACHMENT,g.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(g.renderbufferStorage(g.RENDERBUFFER,g.DEPTH_STENCIL,b.width,b.height),g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_STENCIL_ATTACHMENT,g.RENDERBUFFER,a)):g.renderbufferStorage(g.RENDERBUFFER,g.RGBA4,b.width,b.height)}function R(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||
a===THREE.NearestMipMapLinearFilter?g.NEAREST:g.LINEAR}function r(a){if(a===THREE.RepeatWrapping)return g.REPEAT;if(a===THREE.ClampToEdgeWrapping)return g.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return g.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return g.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return g.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return g.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return g.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return g.LINEAR_MIPMAP_NEAREST;
if(a===THREE.LinearMipMapLinearFilter)return g.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return g.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return g.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return g.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return g.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return g.BYTE;if(a===THREE.ShortType)return g.SHORT;if(a===THREE.UnsignedShortType)return g.UNSIGNED_SHORT;if(a===THREE.IntType)return g.INT;if(a===THREE.UnsignedIntType)return g.UNSIGNED_INT;
if(a===THREE.FloatType)return g.FLOAT;if(a===THREE.AlphaFormat)return g.ALPHA;if(a===THREE.RGBFormat)return g.RGB;if(a===THREE.RGBAFormat)return g.RGBA;if(a===THREE.LuminanceFormat)return g.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return g.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return g.FUNC_ADD;if(a===THREE.SubtractEquation)return g.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return g.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return g.ZERO;if(a===THREE.OneFactor)return g.ONE;if(a===
THREE.SrcColorFactor)return g.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return g.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return g.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return g.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return g.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return g.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return g.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return g.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return g.SRC_ALPHA_SATURATE;
if(void 0!==pa){if(a===THREE.RGB_S3TC_DXT1_Format)return pa.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return pa.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return pa.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return pa.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},ea=void 0!==a.canvas?a.canvas:document.createElement("canvas"),M=void 0!==a.precision?a.precision:"highp",Ja=void 0!==
a.alpha?a.alpha:!0,mb=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,pb=void 0!==a.antialias?a.antialias:!1,tb=void 0!==a.stencil?a.stencil:!0,$a=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,Ka=new THREE.Color(0),db=0;void 0!==a.clearColor&&(console.warn("DEPRECATED: clearColor in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),Ka.setHex(a.clearColor));void 0!==a.clearAlpha&&(console.warn("DEPRECATED: clearAlpha in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),
db=a.clearAlpha);this.domElement=ea;this.context=null;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=
this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var A=this,S=[],ja=0,C=null,Va=null,zb=-1,ob=null,xa=null,Sa=0,fa=0,ha=-1,U=-1,ba=-1,ua=-1,na=-1,ga=-1,va=-1,Ga=-1,la=null,ka=null,qa=null,V=null,oa=0,Da=0,ab=0,qb=0,Pb=0,Kb=0,Lb={},Pa=new THREE.Frustum,Ab=new THREE.Matrix4,nb=new THREE.Matrix4,Ea=new THREE.Vector3,
ra=new THREE.Vector3,Bb=!0,Jb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},g,Xb,Qb,Ta,pa;try{if(!(g=ea.getContext("experimental-webgl",{alpha:Ja,premultipliedAlpha:mb,antialias:pb,stencil:tb,preserveDrawingBuffer:$a})))throw"Error creating WebGL context.";}catch(Fa){console.error(Fa)}Xb=
g.getExtension("OES_texture_float");g.getExtension("OES_texture_float_linear");Qb=g.getExtension("OES_standard_derivatives");Ta=g.getExtension("EXT_texture_filter_anisotropic")||g.getExtension("MOZ_EXT_texture_filter_anisotropic")||g.getExtension("WEBKIT_EXT_texture_filter_anisotropic");pa=g.getExtension("WEBGL_compressed_texture_s3tc")||g.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||g.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");Xb||console.log("THREE.WebGLRenderer: Float textures not supported.");
Qb||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");Ta||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");pa||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");void 0===g.getShaderPrecisionFormat&&(g.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});g.clearColor(0,0,0,1);g.clearDepth(1);g.clearStencil(0);g.enable(g.DEPTH_TEST);g.depthFunc(g.LEQUAL);g.frontFace(g.CCW);g.cullFace(g.BACK);g.enable(g.CULL_FACE);
g.enable(g.BLEND);g.blendEquation(g.FUNC_ADD);g.blendFunc(g.SRC_ALPHA,g.ONE_MINUS_SRC_ALPHA);g.clearColor(Ka.r,Ka.g,Ka.b,db);this.context=g;var Wa=g.getParameter(g.MAX_TEXTURE_IMAGE_UNITS),Zb=g.getParameter(g.MAX_VERTEX_TEXTURE_IMAGE_UNITS);g.getParameter(g.MAX_TEXTURE_SIZE);var $b=g.getParameter(g.MAX_CUBE_MAP_TEXTURE_SIZE),eb=Ta?g.getParameter(Ta.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Ob=0<Zb,Gb=Ob&&Xb;pa&&g.getParameter(g.COMPRESSED_TEXTURE_FORMATS);var Mb=g.getShaderPrecisionFormat(g.VERTEX_SHADER,
g.HIGH_FLOAT),Za=g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.MEDIUM_FLOAT);g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.LOW_FLOAT);var Yb=g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.HIGH_FLOAT),Nb=g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.MEDIUM_FLOAT);g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.LOW_FLOAT);g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.HIGH_INT);g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.MEDIUM_INT);g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.LOW_INT);g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,
g.HIGH_INT);g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.MEDIUM_INT);g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.LOW_INT);var Rb=0<Mb.precision&&0<Yb.precision,oc=0<Za.precision&&0<Nb.precision;"highp"===M&&!Rb&&(oc?(M="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(M="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"===M&&!oc&&(M="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return g};
this.supportsVertexTextures=function(){return Ob};this.supportsFloatTextures=function(){return Xb};this.supportsStandardDerivatives=function(){return Qb};this.supportsCompressedTextureS3TC=function(){return pa};this.getMaxAnisotropy=function(){return eb};this.getPrecision=function(){return M};this.setSize=function(a,b,c){ea.width=a*this.devicePixelRatio;ea.height=b*this.devicePixelRatio;1!==this.devicePixelRatio&&!1!==c&&(ea.style.width=a+"px",ea.style.height=b+"px");this.setViewport(0,0,ea.width,
ea.height)};this.setViewport=function(a,b,c,d){oa=void 0!==a?a:0;Da=void 0!==b?b:0;ab=void 0!==c?c:ea.width;qb=void 0!==d?d:ea.height;g.viewport(oa,Da,ab,qb)};this.setScissor=function(a,b,c,d){g.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?g.enable(g.SCISSOR_TEST):g.disable(g.SCISSOR_TEST)};this.setClearColor=function(a,b){Ka.set(a);db=void 0!==b?b:1;g.clearColor(Ka.r,Ka.g,Ka.b,db)};this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");
this.setClearColor(a,b)};this.getClearColor=function(){return Ka};this.getClearAlpha=function(){return db};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=g.COLOR_BUFFER_BIT;if(void 0===b||b)d|=g.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=g.STENCIL_BUFFER_BIT;g.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};
this.updateShadowMap=function(a,b){C=null;zb=ob=Ga=va=ba=-1;Bb=!0;U=ha=-1;this.shadowMapPlugin.update(a,b)};var pc=function(a){a=a.target;a.removeEventListener("dispose",pc);a.__webglInit=void 0;void 0!==a.__webglVertexBuffer&&g.deleteBuffer(a.__webglVertexBuffer);void 0!==a.__webglNormalBuffer&&g.deleteBuffer(a.__webglNormalBuffer);void 0!==a.__webglTangentBuffer&&g.deleteBuffer(a.__webglTangentBuffer);void 0!==a.__webglColorBuffer&&g.deleteBuffer(a.__webglColorBuffer);void 0!==a.__webglUVBuffer&&
g.deleteBuffer(a.__webglUVBuffer);void 0!==a.__webglUV2Buffer&&g.deleteBuffer(a.__webglUV2Buffer);void 0!==a.__webglSkinIndicesBuffer&&g.deleteBuffer(a.__webglSkinIndicesBuffer);void 0!==a.__webglSkinWeightsBuffer&&g.deleteBuffer(a.__webglSkinWeightsBuffer);void 0!==a.__webglFaceBuffer&&g.deleteBuffer(a.__webglFaceBuffer);void 0!==a.__webglLineBuffer&&g.deleteBuffer(a.__webglLineBuffer);void 0!==a.__webglLineDistanceBuffer&&g.deleteBuffer(a.__webglLineDistanceBuffer);if(void 0!==a.geometryGroups)for(var c in a.geometryGroups){var d=
a.geometryGroups[c];if(void 0!==d.numMorphTargets)for(var e=0,f=d.numMorphTargets;e<f;e++)g.deleteBuffer(d.__webglMorphTargetsBuffers[e]);if(void 0!==d.numMorphNormals){e=0;for(f=d.numMorphNormals;e<f;e++)g.deleteBuffer(d.__webglMorphNormalsBuffers[e])}b(d)}b(a);A.info.memory.geometries--},kc=function(a){a=a.target;a.removeEventListener("dispose",kc);a.image&&a.image.__webglTextureCube?g.deleteTexture(a.image.__webglTextureCube):a.__webglInit&&(a.__webglInit=!1,g.deleteTexture(a.__webglTexture));
A.info.memory.textures--},qc=function(a){a=a.target;a.removeEventListener("dispose",qc);if(a&&a.__webglTexture)if(g.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)g.deleteFramebuffer(a.__webglFramebuffer[b]),g.deleteRenderbuffer(a.__webglRenderbuffer[b]);else g.deleteFramebuffer(a.__webglFramebuffer),g.deleteRenderbuffer(a.__webglRenderbuffer);A.info.memory.textures--},wc=function(a){a=a.target;a.removeEventListener("dispose",wc);xc(a)},xc=function(a){var b=
a.program;if(void 0!==b){a.program=void 0;var c,d,e=!1,a=0;for(c=S.length;a<c;a++)if(d=S[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=S.length;a<c;a++)d=S[a],d.program!==b&&e.push(d);S=e;g.deleteProgram(b);A.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=g.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=g.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&
(a.__webglUvBuffer=g.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=g.createBuffer());a.hasPositions&&(g.bindBuffer(g.ARRAY_BUFFER,a.__webglVertexBuffer),g.bufferData(g.ARRAY_BUFFER,a.positionArray,g.DYNAMIC_DRAW),g.enableVertexAttribArray(b.attributes.position),g.vertexAttribPointer(b.attributes.position,3,g.FLOAT,!1,0,0));if(a.hasNormals){g.bindBuffer(g.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,h,i,j,k,l,m,n,p,r=3*a.count;for(p=0;p<
r;p+=9)n=a.normalArray,d=n[p],e=n[p+1],f=n[p+2],h=n[p+3],j=n[p+4],l=n[p+5],i=n[p+6],k=n[p+7],m=n[p+8],d=(d+h+i)/3,e=(e+j+k)/3,f=(f+l+m)/3,n[p]=d,n[p+1]=e,n[p+2]=f,n[p+3]=d,n[p+4]=e,n[p+5]=f,n[p+6]=d,n[p+7]=e,n[p+8]=f}g.bufferData(g.ARRAY_BUFFER,a.normalArray,g.DYNAMIC_DRAW);g.enableVertexAttribArray(b.attributes.normal);g.vertexAttribPointer(b.attributes.normal,3,g.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(g.bindBuffer(g.ARRAY_BUFFER,a.__webglUvBuffer),g.bufferData(g.ARRAY_BUFFER,a.uvArray,g.DYNAMIC_DRAW),
g.enableVertexAttribArray(b.attributes.uv),g.vertexAttribPointer(b.attributes.uv,2,g.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(g.bindBuffer(g.ARRAY_BUFFER,a.__webglColorBuffer),g.bufferData(g.ARRAY_BUFFER,a.colorArray,g.DYNAMIC_DRAW),g.enableVertexAttribArray(b.attributes.color),g.vertexAttribPointer(b.attributes.color,3,g.FLOAT,!1,0,0));g.drawArrays(g.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible){var h,k,l,m;h=Q(a,b,c,d,f);b=
h.attributes;a=e.attributes;c=!1;h=16777215*e.id+2*h.id+(d.wireframe?1:0);h!==ob&&(ob=h,c=!0);c&&j();if(f instanceof THREE.Mesh)if(d=a.index){e=e.offsets;1<e.length&&(c=!0);for(var f=0,n=e.length;f<n;f++){var p=e[f].index;if(c){for(k in a)"index"!==k&&(l=b[k],h=a[k],m=h.itemSize,0<=l&&(g.bindBuffer(g.ARRAY_BUFFER,h.buffer),i(l),g.vertexAttribPointer(l,m,g.FLOAT,!1,0,4*p*m)));g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,d.buffer)}g.drawElements(g.TRIANGLES,e[f].count,g.UNSIGNED_SHORT,2*e[f].start);A.info.render.calls++;
A.info.render.vertices+=e[f].count;A.info.render.faces+=e[f].count/3}}else{if(c)for(k in a)"index"!==k&&(l=b[k],h=a[k],m=h.itemSize,0<=l&&(g.bindBuffer(g.ARRAY_BUFFER,h.buffer),i(l),g.vertexAttribPointer(l,m,g.FLOAT,!1,0,0)));a=e.attributes.position;g.drawArrays(g.TRIANGLES,0,a.numItems/3);A.info.render.calls++;A.info.render.vertices+=a.numItems/3;A.info.render.faces+=a.numItems/3/3}else if(f instanceof THREE.ParticleSystem){if(c){for(k in a)l=b[k],h=a[k],m=h.itemSize,0<=l&&(g.bindBuffer(g.ARRAY_BUFFER,
h.buffer),i(l),g.vertexAttribPointer(l,m,g.FLOAT,!1,0,0));a=a.position;g.drawArrays(g.POINTS,0,a.numItems/3);A.info.render.calls++;A.info.render.points+=a.numItems/3}}else if(f instanceof THREE.Line&&c){for(k in a)l=b[k],h=a[k],m=h.itemSize,0<=l&&(g.bindBuffer(g.ARRAY_BUFFER,h.buffer),i(l),g.vertexAttribPointer(l,m,g.FLOAT,!1,0,0));k=f.type===THREE.LineStrip?g.LINE_STRIP:g.LINES;t(d.linewidth);a=a.position;g.drawArrays(k,0,a.numItems/3);A.info.render.calls++;A.info.render.points+=a.numItems}}};this.renderBuffer=
function(a,b,c,d,e,f){if(!1!==d.visible){var h,k,c=Q(a,b,c,d,f),a=c.attributes,b=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==ob&&(ob=c,b=!0);b&&j();if(!d.morphTargets&&0<=a.position)b&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglVertexBuffer),i(a.position),g.vertexAttribPointer(a.position,3,g.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),i(c.position),g.vertexAttribPointer(c.position,
3,g.FLOAT,!1,0,0)):0<=c.position&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglVertexBuffer),i(c.position),g.vertexAttribPointer(c.position,3,g.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var l=0;k=f.morphTargetForcedOrder;for(h=f.morphTargetInfluences;l<d.numSupportedMorphTargets&&l<k.length;)0<=c["morphTarget"+l]&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[k[l]]),i(c["morphTarget"+l]),g.vertexAttribPointer(c["morphTarget"+l],3,g.FLOAT,!1,0,0)),0<=c["morphNormal"+l]&&d.morphNormals&&
(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[k[l]]),i(c["morphNormal"+l]),g.vertexAttribPointer(c["morphNormal"+l],3,g.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[l]=h[k[l]],l++}else{k=[];h=f.morphTargetInfluences;var n,p=h.length;for(n=0;n<p;n++)l=h[n],0<l&&k.push([l,n]);k.length>d.numSupportedMorphTargets?(k.sort(m),k.length=d.numSupportedMorphTargets):k.length>d.numSupportedMorphNormals?k.sort(m):0===k.length&&k.push([0,0]);for(l=0;l<d.numSupportedMorphTargets;)k[l]?(n=k[l][1],0<=
c["morphTarget"+l]&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[n]),i(c["morphTarget"+l]),g.vertexAttribPointer(c["morphTarget"+l],3,g.FLOAT,!1,0,0)),0<=c["morphNormal"+l]&&d.morphNormals&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[n]),i(c["morphNormal"+l]),g.vertexAttribPointer(c["morphNormal"+l],3,g.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[l]=h[n]):f.__webglMorphTargetInfluences[l]=0,l++}null!==d.program.uniforms.morphTargetInfluences&&g.uniform1fv(d.program.uniforms.morphTargetInfluences,
f.__webglMorphTargetInfluences)}if(b){if(e.__webglCustomAttributesList){h=0;for(k=e.__webglCustomAttributesList.length;h<k;h++)c=e.__webglCustomAttributesList[h],0<=a[c.buffer.belongsToAttribute]&&(g.bindBuffer(g.ARRAY_BUFFER,c.buffer),i(a[c.buffer.belongsToAttribute]),g.vertexAttribPointer(a[c.buffer.belongsToAttribute],c.size,g.FLOAT,!1,0,0))}0<=a.color&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglColorBuffer),i(a.color),g.vertexAttribPointer(a.color,3,g.FLOAT,!1,0,0));0<=a.normal&&(g.bindBuffer(g.ARRAY_BUFFER,
e.__webglNormalBuffer),i(a.normal),g.vertexAttribPointer(a.normal,3,g.FLOAT,!1,0,0));0<=a.tangent&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglTangentBuffer),i(a.tangent),g.vertexAttribPointer(a.tangent,4,g.FLOAT,!1,0,0));0<=a.uv&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglUVBuffer),i(a.uv),g.vertexAttribPointer(a.uv,2,g.FLOAT,!1,0,0));0<=a.uv2&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglUV2Buffer),i(a.uv2),g.vertexAttribPointer(a.uv2,2,g.FLOAT,!1,0,0));d.skinning&&(0<=a.skinIndex&&0<=a.skinWeight)&&(g.bindBuffer(g.ARRAY_BUFFER,
e.__webglSkinIndicesBuffer),i(a.skinIndex),g.vertexAttribPointer(a.skinIndex,4,g.FLOAT,!1,0,0),g.bindBuffer(g.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),i(a.skinWeight),g.vertexAttribPointer(a.skinWeight,4,g.FLOAT,!1,0,0));0<=a.lineDistance&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglLineDistanceBuffer),i(a.lineDistance),g.vertexAttribPointer(a.lineDistance,1,g.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(t(d.wireframeLinewidth),b&&g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),g.drawElements(g.LINES,
e.__webglLineCount,g.UNSIGNED_SHORT,0)):(b&&g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),g.drawElements(g.TRIANGLES,e.__webglFaceCount,g.UNSIGNED_SHORT,0)),A.info.render.calls++,A.info.render.vertices+=e.__webglFaceCount,A.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?g.LINE_STRIP:g.LINES,t(d.linewidth),g.drawArrays(f,0,e.__webglLineCount),A.info.render.calls++):f instanceof THREE.ParticleSystem?(g.drawArrays(g.POINTS,0,e.__webglParticleCount),
A.info.render.calls++,A.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(g.drawArrays(g.TRIANGLE_STRIP,0,e.__webglVertexCount),A.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,h,i,j=a.__lights,l=a.fog;zb=-1;Bb=!0;!0===a.autoUpdate&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);
Ab.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);Pa.setFromMatrix(Ab);this.autoUpdateObjects&&this.initWebGLObjects(a);p(this.renderPluginsPre,a,b);A.info.render.calls=0;A.info.render.vertices=0;A.info.render.faces=0;A.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);i=a.__webglObjects;d=0;for(e=i.length;d<e;d++)if(f=i[d],h=f.object,f.id=d,f.render=!1,h.visible&&(!(h instanceof THREE.Mesh||h instanceof
THREE.ParticleSystem)||!h.frustumCulled||Pa.intersectsObject(h))){var m=h;m._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,m.matrixWorld);m._normalMatrix.getNormalMatrix(m._modelViewMatrix);var m=f,n=m.buffer,r=void 0,t=r=void 0,t=m.object.material;if(t instanceof THREE.MeshFaceMaterial)r=n.materialIndex,r=t.materials[r],r.transparent?(m.transparent=r,m.opaque=null):(m.opaque=r,m.transparent=null);else if(r=t)r.transparent?(m.transparent=r,m.opaque=null):(m.opaque=r,m.transparent=null);f.render=
!0;!0===this.sortObjects&&(null!==h.renderDepth?f.z=h.renderDepth:(Ea.getPositionFromMatrix(h.matrixWorld),Ea.applyProjection(Ab),f.z=Ea.z))}this.sortObjects&&i.sort(k);i=a.__webglObjectsImmediate;d=0;for(e=i.length;d<e;d++)f=i[d],h=f.object,h.visible&&(h._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,h.matrixWorld),h._normalMatrix.getNormalMatrix(h._modelViewMatrix),h=f.object.material,h.transparent?(f.transparent=h,f.opaque=null):(f.opaque=h,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,
this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),P(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),w(a.__webglObjects,!1,"",b,j,l,!0,d),u(a.__webglObjectsImmediate,"",b,j,l,!1,d)):(d=null,this.setBlending(THREE.NoBlending),w(a.__webglObjects,!0,"opaque",b,j,l,!1,d),u(a.__webglObjectsImmediate,"opaque",b,j,l,!1,d),w(a.__webglObjects,!1,"transparent",b,j,l,!0,d),u(a.__webglObjectsImmediate,"transparent",b,
j,l,!0,d));p(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(g.bindTexture(g.TEXTURE_CUBE_MAP,c.__webglTexture),g.generateMipmap(g.TEXTURE_CUBE_MAP),g.bindTexture(g.TEXTURE_CUBE_MAP,null)):(g.bindTexture(g.TEXTURE_2D,c.__webglTexture),g.generateMipmap(g.TEXTURE_2D),g.bindTexture(g.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,
b,c,d,e){var f=Q(a,b,c,d,e);ob=-1;A.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,g,Pa):e.render(function(a){A.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;)E(a.__objectsAdded[0],a),a.__objectsAdded.splice(0,1);for(;a.__objectsRemoved.length;)F(a.__objectsRemoved[0],a),a.__objectsRemoved.splice(0,1);for(var b=0,c=
a.__webglObjects.length;b<c;b++){var i=a.__webglObjects[b].object;void 0===i.__webglInit&&(void 0!==i.__webglActive&&F(i,a),E(i,a));var j=i,k=j.geometry,l=void 0,p=void 0,r=void 0;if(k instanceof THREE.BufferGeometry){var t=g.DYNAMIC_DRAW,u=!k.dynamic,v=k.attributes,x=void 0,w=void 0;for(x in v)w=v[x],w.needsUpdate&&("index"===x?(g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,w.buffer),g.bufferData(g.ELEMENT_ARRAY_BUFFER,w.array,t)):(g.bindBuffer(g.ARRAY_BUFFER,w.buffer),g.bufferData(g.ARRAY_BUFFER,w.array,
t)),w.needsUpdate=!1),u&&!w.dynamic&&(w.array=null)}else if(j instanceof THREE.Mesh){for(var z=0,C=k.geometryGroupsList.length;z<C;z++)if(l=k.geometryGroupsList[z],r=e(j,l),k.buffersNeedUpdate&&d(l,j),p=r.attributes&&n(r),k.verticesNeedUpdate||k.morphTargetsNeedUpdate||k.elementsNeedUpdate||k.uvsNeedUpdate||k.normalsNeedUpdate||k.colorsNeedUpdate||k.tangentsNeedUpdate||p){var A=l,L=j,I=g.DYNAMIC_DRAW,O=!k.dynamic,M=r;if(A.__inittedArrays){var Q=f(M),S=M.vertexColors?M.vertexColors:!1,U=h(M),R=Q===
THREE.SmoothShading,y=void 0,N=void 0,P=void 0,G=void 0,T=void 0,V=void 0,W=void 0,ba=void 0,da=void 0,fa=void 0,ga=void 0,J=void 0,K=void 0,H=void 0,$=void 0,ea=void 0,ha=void 0,ja=void 0,na=void 0,ka=void 0,la=void 0,oa=void 0,ua=void 0,pa=void 0,qa=void 0,ra=void 0,Fa=void 0,va=void 0,xa=void 0,Da=void 0,Sa=void 0,Ga=void 0,Ja=void 0,Ka=void 0,ab=void 0,ya=void 0,mb=void 0,Va=void 0,db=void 0,eb=void 0,fb=void 0,qb=void 0,bb=void 0,cb=void 0,Za=void 0,Ta=void 0,Qa=0,Ua=0,Wa=0,$a=0,Pa=0,kb=0,Ba=
0,sb=0,Ra=0,Y=0,ia=0,s=0,za=void 0,gb=A.__vertexArray,ob=A.__uvArray,pb=A.__uv2Array,Db=A.__normalArray,La=A.__tangentArray,hb=A.__colorArray,Ma=A.__skinIndexArray,Na=A.__skinWeightArray,tb=A.__morphTargetsArrays,zb=A.__morphNormalsArrays,Bb=A.__webglCustomAttributesList,q=void 0,Sb=A.__faceArray,yb=A.__lineArray,ub=L.geometry,Lb=ub.elementsNeedUpdate,Gb=ub.uvsNeedUpdate,Ob=ub.normalsNeedUpdate,Rb=ub.tangentsNeedUpdate,Xb=ub.colorsNeedUpdate,Yb=ub.morphTargetsNeedUpdate,gc=ub.vertices,sa=A.faces3,
ta=A.faces4,lb=ub.faces,Pb=ub.faceVertexUvs[0],Qb=ub.faceVertexUvs[1],hc=ub.skinIndices,dc=ub.skinWeights,ec=ub.morphTargets,Kb=ub.morphNormals;if(ub.verticesNeedUpdate){y=0;for(N=sa.length;y<N;y++)G=lb[sa[y]],J=gc[G.a],K=gc[G.b],H=gc[G.c],gb[Ua]=J.x,gb[Ua+1]=J.y,gb[Ua+2]=J.z,gb[Ua+3]=K.x,gb[Ua+4]=K.y,gb[Ua+5]=K.z,gb[Ua+6]=H.x,gb[Ua+7]=H.y,gb[Ua+8]=H.z,Ua+=9;y=0;for(N=ta.length;y<N;y++)G=lb[ta[y]],J=gc[G.a],K=gc[G.b],H=gc[G.c],$=gc[G.d],gb[Ua]=J.x,gb[Ua+1]=J.y,gb[Ua+2]=J.z,gb[Ua+3]=K.x,gb[Ua+4]=K.y,
gb[Ua+5]=K.z,gb[Ua+6]=H.x,gb[Ua+7]=H.y,gb[Ua+8]=H.z,gb[Ua+9]=$.x,gb[Ua+10]=$.y,gb[Ua+11]=$.z,Ua+=12;g.bindBuffer(g.ARRAY_BUFFER,A.__webglVertexBuffer);g.bufferData(g.ARRAY_BUFFER,gb,I)}if(Yb){fb=0;for(qb=ec.length;fb<qb;fb++){y=ia=0;for(N=sa.length;y<N;y++)Za=sa[y],G=lb[Za],J=ec[fb].vertices[G.a],K=ec[fb].vertices[G.b],H=ec[fb].vertices[G.c],bb=tb[fb],bb[ia]=J.x,bb[ia+1]=J.y,bb[ia+2]=J.z,bb[ia+3]=K.x,bb[ia+4]=K.y,bb[ia+5]=K.z,bb[ia+6]=H.x,bb[ia+7]=H.y,bb[ia+8]=H.z,M.morphNormals&&(R?(Ta=Kb[fb].vertexNormals[Za],
ka=Ta.a,la=Ta.b,oa=Ta.c):oa=la=ka=Kb[fb].faceNormals[Za],cb=zb[fb],cb[ia]=ka.x,cb[ia+1]=ka.y,cb[ia+2]=ka.z,cb[ia+3]=la.x,cb[ia+4]=la.y,cb[ia+5]=la.z,cb[ia+6]=oa.x,cb[ia+7]=oa.y,cb[ia+8]=oa.z),ia+=9;y=0;for(N=ta.length;y<N;y++)Za=ta[y],G=lb[Za],J=ec[fb].vertices[G.a],K=ec[fb].vertices[G.b],H=ec[fb].vertices[G.c],$=ec[fb].vertices[G.d],bb=tb[fb],bb[ia]=J.x,bb[ia+1]=J.y,bb[ia+2]=J.z,bb[ia+3]=K.x,bb[ia+4]=K.y,bb[ia+5]=K.z,bb[ia+6]=H.x,bb[ia+7]=H.y,bb[ia+8]=H.z,bb[ia+9]=$.x,bb[ia+10]=$.y,bb[ia+11]=$.z,
M.morphNormals&&(R?(Ta=Kb[fb].vertexNormals[Za],ka=Ta.a,la=Ta.b,oa=Ta.c,ua=Ta.d):ua=oa=la=ka=Kb[fb].faceNormals[Za],cb=zb[fb],cb[ia]=ka.x,cb[ia+1]=ka.y,cb[ia+2]=ka.z,cb[ia+3]=la.x,cb[ia+4]=la.y,cb[ia+5]=la.z,cb[ia+6]=oa.x,cb[ia+7]=oa.y,cb[ia+8]=oa.z,cb[ia+9]=ua.x,cb[ia+10]=ua.y,cb[ia+11]=ua.z),ia+=12;g.bindBuffer(g.ARRAY_BUFFER,A.__webglMorphTargetsBuffers[fb]);g.bufferData(g.ARRAY_BUFFER,tb[fb],I);M.morphNormals&&(g.bindBuffer(g.ARRAY_BUFFER,A.__webglMorphNormalsBuffers[fb]),g.bufferData(g.ARRAY_BUFFER,
zb[fb],I))}}if(dc.length){y=0;for(N=sa.length;y<N;y++)G=lb[sa[y]],va=dc[G.a],xa=dc[G.b],Da=dc[G.c],Na[Y]=va.x,Na[Y+1]=va.y,Na[Y+2]=va.z,Na[Y+3]=va.w,Na[Y+4]=xa.x,Na[Y+5]=xa.y,Na[Y+6]=xa.z,Na[Y+7]=xa.w,Na[Y+8]=Da.x,Na[Y+9]=Da.y,Na[Y+10]=Da.z,Na[Y+11]=Da.w,Ga=hc[G.a],Ja=hc[G.b],Ka=hc[G.c],Ma[Y]=Ga.x,Ma[Y+1]=Ga.y,Ma[Y+2]=Ga.z,Ma[Y+3]=Ga.w,Ma[Y+4]=Ja.x,Ma[Y+5]=Ja.y,Ma[Y+6]=Ja.z,Ma[Y+7]=Ja.w,Ma[Y+8]=Ka.x,Ma[Y+9]=Ka.y,Ma[Y+10]=Ka.z,Ma[Y+11]=Ka.w,Y+=12;y=0;for(N=ta.length;y<N;y++)G=lb[ta[y]],va=dc[G.a],
xa=dc[G.b],Da=dc[G.c],Sa=dc[G.d],Na[Y]=va.x,Na[Y+1]=va.y,Na[Y+2]=va.z,Na[Y+3]=va.w,Na[Y+4]=xa.x,Na[Y+5]=xa.y,Na[Y+6]=xa.z,Na[Y+7]=xa.w,Na[Y+8]=Da.x,Na[Y+9]=Da.y,Na[Y+10]=Da.z,Na[Y+11]=Da.w,Na[Y+12]=Sa.x,Na[Y+13]=Sa.y,Na[Y+14]=Sa.z,Na[Y+15]=Sa.w,Ga=hc[G.a],Ja=hc[G.b],Ka=hc[G.c],ab=hc[G.d],Ma[Y]=Ga.x,Ma[Y+1]=Ga.y,Ma[Y+2]=Ga.z,Ma[Y+3]=Ga.w,Ma[Y+4]=Ja.x,Ma[Y+5]=Ja.y,Ma[Y+6]=Ja.z,Ma[Y+7]=Ja.w,Ma[Y+8]=Ka.x,Ma[Y+9]=Ka.y,Ma[Y+10]=Ka.z,Ma[Y+11]=Ka.w,Ma[Y+12]=ab.x,Ma[Y+13]=ab.y,Ma[Y+14]=ab.z,Ma[Y+15]=ab.w,
Y+=16;0<Y&&(g.bindBuffer(g.ARRAY_BUFFER,A.__webglSkinIndicesBuffer),g.bufferData(g.ARRAY_BUFFER,Ma,I),g.bindBuffer(g.ARRAY_BUFFER,A.__webglSkinWeightsBuffer),g.bufferData(g.ARRAY_BUFFER,Na,I))}if(Xb&&S){y=0;for(N=sa.length;y<N;y++)G=lb[sa[y]],W=G.vertexColors,ba=G.color,3===W.length&&S===THREE.VertexColors?(pa=W[0],qa=W[1],ra=W[2]):ra=qa=pa=ba,hb[Ra]=pa.r,hb[Ra+1]=pa.g,hb[Ra+2]=pa.b,hb[Ra+3]=qa.r,hb[Ra+4]=qa.g,hb[Ra+5]=qa.b,hb[Ra+6]=ra.r,hb[Ra+7]=ra.g,hb[Ra+8]=ra.b,Ra+=9;y=0;for(N=ta.length;y<N;y++)G=
lb[ta[y]],W=G.vertexColors,ba=G.color,4===W.length&&S===THREE.VertexColors?(pa=W[0],qa=W[1],ra=W[2],Fa=W[3]):Fa=ra=qa=pa=ba,hb[Ra]=pa.r,hb[Ra+1]=pa.g,hb[Ra+2]=pa.b,hb[Ra+3]=qa.r,hb[Ra+4]=qa.g,hb[Ra+5]=qa.b,hb[Ra+6]=ra.r,hb[Ra+7]=ra.g,hb[Ra+8]=ra.b,hb[Ra+9]=Fa.r,hb[Ra+10]=Fa.g,hb[Ra+11]=Fa.b,Ra+=12;0<Ra&&(g.bindBuffer(g.ARRAY_BUFFER,A.__webglColorBuffer),g.bufferData(g.ARRAY_BUFFER,hb,I))}if(Rb&&ub.hasTangents){y=0;for(N=sa.length;y<N;y++)G=lb[sa[y]],da=G.vertexTangents,ea=da[0],ha=da[1],ja=da[2],
La[Ba]=ea.x,La[Ba+1]=ea.y,La[Ba+2]=ea.z,La[Ba+3]=ea.w,La[Ba+4]=ha.x,La[Ba+5]=ha.y,La[Ba+6]=ha.z,La[Ba+7]=ha.w,La[Ba+8]=ja.x,La[Ba+9]=ja.y,La[Ba+10]=ja.z,La[Ba+11]=ja.w,Ba+=12;y=0;for(N=ta.length;y<N;y++)G=lb[ta[y]],da=G.vertexTangents,ea=da[0],ha=da[1],ja=da[2],na=da[3],La[Ba]=ea.x,La[Ba+1]=ea.y,La[Ba+2]=ea.z,La[Ba+3]=ea.w,La[Ba+4]=ha.x,La[Ba+5]=ha.y,La[Ba+6]=ha.z,La[Ba+7]=ha.w,La[Ba+8]=ja.x,La[Ba+9]=ja.y,La[Ba+10]=ja.z,La[Ba+11]=ja.w,La[Ba+12]=na.x,La[Ba+13]=na.y,La[Ba+14]=na.z,La[Ba+15]=na.w,Ba+=
16;g.bindBuffer(g.ARRAY_BUFFER,A.__webglTangentBuffer);g.bufferData(g.ARRAY_BUFFER,La,I)}if(Ob&&Q){y=0;for(N=sa.length;y<N;y++)if(G=lb[sa[y]],T=G.vertexNormals,V=G.normal,3===T.length&&R)for(ya=0;3>ya;ya++)Va=T[ya],Db[kb]=Va.x,Db[kb+1]=Va.y,Db[kb+2]=Va.z,kb+=3;else for(ya=0;3>ya;ya++)Db[kb]=V.x,Db[kb+1]=V.y,Db[kb+2]=V.z,kb+=3;y=0;for(N=ta.length;y<N;y++)if(G=lb[ta[y]],T=G.vertexNormals,V=G.normal,4===T.length&&R)for(ya=0;4>ya;ya++)Va=T[ya],Db[kb]=Va.x,Db[kb+1]=Va.y,Db[kb+2]=Va.z,kb+=3;else for(ya=
0;4>ya;ya++)Db[kb]=V.x,Db[kb+1]=V.y,Db[kb+2]=V.z,kb+=3;g.bindBuffer(g.ARRAY_BUFFER,A.__webglNormalBuffer);g.bufferData(g.ARRAY_BUFFER,Db,I)}if(Gb&&Pb&&U){y=0;for(N=sa.length;y<N;y++)if(P=sa[y],fa=Pb[P],void 0!==fa)for(ya=0;3>ya;ya++)db=fa[ya],ob[Wa]=db.x,ob[Wa+1]=db.y,Wa+=2;y=0;for(N=ta.length;y<N;y++)if(P=ta[y],fa=Pb[P],void 0!==fa)for(ya=0;4>ya;ya++)db=fa[ya],ob[Wa]=db.x,ob[Wa+1]=db.y,Wa+=2;0<Wa&&(g.bindBuffer(g.ARRAY_BUFFER,A.__webglUVBuffer),g.bufferData(g.ARRAY_BUFFER,ob,I))}if(Gb&&Qb&&U){y=
0;for(N=sa.length;y<N;y++)if(P=sa[y],ga=Qb[P],void 0!==ga)for(ya=0;3>ya;ya++)eb=ga[ya],pb[$a]=eb.x,pb[$a+1]=eb.y,$a+=2;y=0;for(N=ta.length;y<N;y++)if(P=ta[y],ga=Qb[P],void 0!==ga)for(ya=0;4>ya;ya++)eb=ga[ya],pb[$a]=eb.x,pb[$a+1]=eb.y,$a+=2;0<$a&&(g.bindBuffer(g.ARRAY_BUFFER,A.__webglUV2Buffer),g.bufferData(g.ARRAY_BUFFER,pb,I))}if(Lb){y=0;for(N=sa.length;y<N;y++)Sb[Pa]=Qa,Sb[Pa+1]=Qa+1,Sb[Pa+2]=Qa+2,Pa+=3,yb[sb]=Qa,yb[sb+1]=Qa+1,yb[sb+2]=Qa,yb[sb+3]=Qa+2,yb[sb+4]=Qa+1,yb[sb+5]=Qa+2,sb+=6,Qa+=3;y=
0;for(N=ta.length;y<N;y++)Sb[Pa]=Qa,Sb[Pa+1]=Qa+1,Sb[Pa+2]=Qa+3,Sb[Pa+3]=Qa+1,Sb[Pa+4]=Qa+2,Sb[Pa+5]=Qa+3,Pa+=6,yb[sb]=Qa,yb[sb+1]=Qa+1,yb[sb+2]=Qa,yb[sb+3]=Qa+3,yb[sb+4]=Qa+1,yb[sb+5]=Qa+2,yb[sb+6]=Qa+2,yb[sb+7]=Qa+3,sb+=8,Qa+=4;g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,A.__webglFaceBuffer);g.bufferData(g.ELEMENT_ARRAY_BUFFER,Sb,I);g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,A.__webglLineBuffer);g.bufferData(g.ELEMENT_ARRAY_BUFFER,yb,I)}if(Bb){ya=0;for(mb=Bb.length;ya<mb;ya++)if(q=Bb[ya],q.__original.needsUpdate){s=
0;if(1===q.size)if(void 0===q.boundTo||"vertices"===q.boundTo){y=0;for(N=sa.length;y<N;y++)G=lb[sa[y]],q.array[s]=q.value[G.a],q.array[s+1]=q.value[G.b],q.array[s+2]=q.value[G.c],s+=3;y=0;for(N=ta.length;y<N;y++)G=lb[ta[y]],q.array[s]=q.value[G.a],q.array[s+1]=q.value[G.b],q.array[s+2]=q.value[G.c],q.array[s+3]=q.value[G.d],s+=4}else{if("faces"===q.boundTo){y=0;for(N=sa.length;y<N;y++)za=q.value[sa[y]],q.array[s]=za,q.array[s+1]=za,q.array[s+2]=za,s+=3;y=0;for(N=ta.length;y<N;y++)za=q.value[ta[y]],
q.array[s]=za,q.array[s+1]=za,q.array[s+2]=za,q.array[s+3]=za,s+=4}}else if(2===q.size)if(void 0===q.boundTo||"vertices"===q.boundTo){y=0;for(N=sa.length;y<N;y++)G=lb[sa[y]],J=q.value[G.a],K=q.value[G.b],H=q.value[G.c],q.array[s]=J.x,q.array[s+1]=J.y,q.array[s+2]=K.x,q.array[s+3]=K.y,q.array[s+4]=H.x,q.array[s+5]=H.y,s+=6;y=0;for(N=ta.length;y<N;y++)G=lb[ta[y]],J=q.value[G.a],K=q.value[G.b],H=q.value[G.c],$=q.value[G.d],q.array[s]=J.x,q.array[s+1]=J.y,q.array[s+2]=K.x,q.array[s+3]=K.y,q.array[s+4]=
H.x,q.array[s+5]=H.y,q.array[s+6]=$.x,q.array[s+7]=$.y,s+=8}else{if("faces"===q.boundTo){y=0;for(N=sa.length;y<N;y++)H=K=J=za=q.value[sa[y]],q.array[s]=J.x,q.array[s+1]=J.y,q.array[s+2]=K.x,q.array[s+3]=K.y,q.array[s+4]=H.x,q.array[s+5]=H.y,s+=6;y=0;for(N=ta.length;y<N;y++)$=H=K=J=za=q.value[ta[y]],q.array[s]=J.x,q.array[s+1]=J.y,q.array[s+2]=K.x,q.array[s+3]=K.y,q.array[s+4]=H.x,q.array[s+5]=H.y,q.array[s+6]=$.x,q.array[s+7]=$.y,s+=8}}else if(3===q.size){var X;X="c"===q.type?["r","g","b"]:["x","y",
"z"];if(void 0===q.boundTo||"vertices"===q.boundTo){y=0;for(N=sa.length;y<N;y++)G=lb[sa[y]],J=q.value[G.a],K=q.value[G.b],H=q.value[G.c],q.array[s]=J[X[0]],q.array[s+1]=J[X[1]],q.array[s+2]=J[X[2]],q.array[s+3]=K[X[0]],q.array[s+4]=K[X[1]],q.array[s+5]=K[X[2]],q.array[s+6]=H[X[0]],q.array[s+7]=H[X[1]],q.array[s+8]=H[X[2]],s+=9;y=0;for(N=ta.length;y<N;y++)G=lb[ta[y]],J=q.value[G.a],K=q.value[G.b],H=q.value[G.c],$=q.value[G.d],q.array[s]=J[X[0]],q.array[s+1]=J[X[1]],q.array[s+2]=J[X[2]],q.array[s+3]=
K[X[0]],q.array[s+4]=K[X[1]],q.array[s+5]=K[X[2]],q.array[s+6]=H[X[0]],q.array[s+7]=H[X[1]],q.array[s+8]=H[X[2]],q.array[s+9]=$[X[0]],q.array[s+10]=$[X[1]],q.array[s+11]=$[X[2]],s+=12}else if("faces"===q.boundTo){y=0;for(N=sa.length;y<N;y++)H=K=J=za=q.value[sa[y]],q.array[s]=J[X[0]],q.array[s+1]=J[X[1]],q.array[s+2]=J[X[2]],q.array[s+3]=K[X[0]],q.array[s+4]=K[X[1]],q.array[s+5]=K[X[2]],q.array[s+6]=H[X[0]],q.array[s+7]=H[X[1]],q.array[s+8]=H[X[2]],s+=9;y=0;for(N=ta.length;y<N;y++)$=H=K=J=za=q.value[ta[y]],
q.array[s]=J[X[0]],q.array[s+1]=J[X[1]],q.array[s+2]=J[X[2]],q.array[s+3]=K[X[0]],q.array[s+4]=K[X[1]],q.array[s+5]=K[X[2]],q.array[s+6]=H[X[0]],q.array[s+7]=H[X[1]],q.array[s+8]=H[X[2]],q.array[s+9]=$[X[0]],q.array[s+10]=$[X[1]],q.array[s+11]=$[X[2]],s+=12}else if("faceVertices"===q.boundTo){y=0;for(N=sa.length;y<N;y++)za=q.value[sa[y]],J=za[0],K=za[1],H=za[2],q.array[s]=J[X[0]],q.array[s+1]=J[X[1]],q.array[s+2]=J[X[2]],q.array[s+3]=K[X[0]],q.array[s+4]=K[X[1]],q.array[s+5]=K[X[2]],q.array[s+6]=
H[X[0]],q.array[s+7]=H[X[1]],q.array[s+8]=H[X[2]],s+=9;y=0;for(N=ta.length;y<N;y++)za=q.value[ta[y]],J=za[0],K=za[1],H=za[2],$=za[3],q.array[s]=J[X[0]],q.array[s+1]=J[X[1]],q.array[s+2]=J[X[2]],q.array[s+3]=K[X[0]],q.array[s+4]=K[X[1]],q.array[s+5]=K[X[2]],q.array[s+6]=H[X[0]],q.array[s+7]=H[X[1]],q.array[s+8]=H[X[2]],q.array[s+9]=$[X[0]],q.array[s+10]=$[X[1]],q.array[s+11]=$[X[2]],s+=12}}else if(4===q.size)if(void 0===q.boundTo||"vertices"===q.boundTo){y=0;for(N=sa.length;y<N;y++)G=lb[sa[y]],J=q.value[G.a],
K=q.value[G.b],H=q.value[G.c],q.array[s]=J.x,q.array[s+1]=J.y,q.array[s+2]=J.z,q.array[s+3]=J.w,q.array[s+4]=K.x,q.array[s+5]=K.y,q.array[s+6]=K.z,q.array[s+7]=K.w,q.array[s+8]=H.x,q.array[s+9]=H.y,q.array[s+10]=H.z,q.array[s+11]=H.w,s+=12;y=0;for(N=ta.length;y<N;y++)G=lb[ta[y]],J=q.value[G.a],K=q.value[G.b],H=q.value[G.c],$=q.value[G.d],q.array[s]=J.x,q.array[s+1]=J.y,q.array[s+2]=J.z,q.array[s+3]=J.w,q.array[s+4]=K.x,q.array[s+5]=K.y,q.array[s+6]=K.z,q.array[s+7]=K.w,q.array[s+8]=H.x,q.array[s+
9]=H.y,q.array[s+10]=H.z,q.array[s+11]=H.w,q.array[s+12]=$.x,q.array[s+13]=$.y,q.array[s+14]=$.z,q.array[s+15]=$.w,s+=16}else if("faces"===q.boundTo){y=0;for(N=sa.length;y<N;y++)H=K=J=za=q.value[sa[y]],q.array[s]=J.x,q.array[s+1]=J.y,q.array[s+2]=J.z,q.array[s+3]=J.w,q.array[s+4]=K.x,q.array[s+5]=K.y,q.array[s+6]=K.z,q.array[s+7]=K.w,q.array[s+8]=H.x,q.array[s+9]=H.y,q.array[s+10]=H.z,q.array[s+11]=H.w,s+=12;y=0;for(N=ta.length;y<N;y++)$=H=K=J=za=q.value[ta[y]],q.array[s]=J.x,q.array[s+1]=J.y,q.array[s+
2]=J.z,q.array[s+3]=J.w,q.array[s+4]=K.x,q.array[s+5]=K.y,q.array[s+6]=K.z,q.array[s+7]=K.w,q.array[s+8]=H.x,q.array[s+9]=H.y,q.array[s+10]=H.z,q.array[s+11]=H.w,q.array[s+12]=$.x,q.array[s+13]=$.y,q.array[s+14]=$.z,q.array[s+15]=$.w,s+=16}else if("faceVertices"===q.boundTo){y=0;for(N=sa.length;y<N;y++)za=q.value[sa[y]],J=za[0],K=za[1],H=za[2],q.array[s]=J.x,q.array[s+1]=J.y,q.array[s+2]=J.z,q.array[s+3]=J.w,q.array[s+4]=K.x,q.array[s+5]=K.y,q.array[s+6]=K.z,q.array[s+7]=K.w,q.array[s+8]=H.x,q.array[s+
9]=H.y,q.array[s+10]=H.z,q.array[s+11]=H.w,s+=12;y=0;for(N=ta.length;y<N;y++)za=q.value[ta[y]],J=za[0],K=za[1],H=za[2],$=za[3],q.array[s]=J.x,q.array[s+1]=J.y,q.array[s+2]=J.z,q.array[s+3]=J.w,q.array[s+4]=K.x,q.array[s+5]=K.y,q.array[s+6]=K.z,q.array[s+7]=K.w,q.array[s+8]=H.x,q.array[s+9]=H.y,q.array[s+10]=H.z,q.array[s+11]=H.w,q.array[s+12]=$.x,q.array[s+13]=$.y,q.array[s+14]=$.z,q.array[s+15]=$.w,s+=16}g.bindBuffer(g.ARRAY_BUFFER,q.buffer);g.bufferData(g.ARRAY_BUFFER,q.array,I)}}O&&(delete A.__inittedArrays,
delete A.__colorArray,delete A.__normalArray,delete A.__tangentArray,delete A.__uvArray,delete A.__uv2Array,delete A.__faceArray,delete A.__vertexArray,delete A.__lineArray,delete A.__skinIndexArray,delete A.__skinWeightArray)}}k.verticesNeedUpdate=!1;k.morphTargetsNeedUpdate=!1;k.elementsNeedUpdate=!1;k.uvsNeedUpdate=!1;k.normalsNeedUpdate=!1;k.colorsNeedUpdate=!1;k.tangentsNeedUpdate=!1;k.buffersNeedUpdate=!1;r.attributes&&B(r)}else if(j instanceof THREE.Ribbon){r=e(j,k);p=r.attributes&&n(r);if(k.verticesNeedUpdate||
k.colorsNeedUpdate||k.normalsNeedUpdate||p){var Eb=k,Nb=g.DYNAMIC_DRAW,Jb=void 0,Mb=void 0,rc=void 0,Zb=void 0,Aa=void 0,$b=void 0,yc=void 0,zc=void 0,kc=void 0,ib=void 0,lc=void 0,Ha=void 0,vb=void 0,oc=Eb.vertices,pc=Eb.colors,qc=Eb.normals,wc=oc.length,xc=pc.length,Yc=qc.length,Ac=Eb.__vertexArray,Bc=Eb.__colorArray,Cc=Eb.__normalArray,Zc=Eb.colorsNeedUpdate,$c=Eb.normalsNeedUpdate,Lc=Eb.__webglCustomAttributesList;if(Eb.verticesNeedUpdate){for(Jb=0;Jb<wc;Jb++)Zb=oc[Jb],Aa=3*Jb,Ac[Aa]=Zb.x,Ac[Aa+
1]=Zb.y,Ac[Aa+2]=Zb.z;g.bindBuffer(g.ARRAY_BUFFER,Eb.__webglVertexBuffer);g.bufferData(g.ARRAY_BUFFER,Ac,Nb)}if(Zc){for(Mb=0;Mb<xc;Mb++)$b=pc[Mb],Aa=3*Mb,Bc[Aa]=$b.r,Bc[Aa+1]=$b.g,Bc[Aa+2]=$b.b;g.bindBuffer(g.ARRAY_BUFFER,Eb.__webglColorBuffer);g.bufferData(g.ARRAY_BUFFER,Bc,Nb)}if($c){for(rc=0;rc<Yc;rc++)yc=qc[rc],Aa=3*rc,Cc[Aa]=yc.x,Cc[Aa+1]=yc.y,Cc[Aa+2]=yc.z;g.bindBuffer(g.ARRAY_BUFFER,Eb.__webglNormalBuffer);g.bufferData(g.ARRAY_BUFFER,Cc,Nb)}if(Lc){zc=0;for(kc=Lc.length;zc<kc;zc++)if(Ha=Lc[zc],
Ha.needsUpdate&&(void 0===Ha.boundTo||"vertices"===Ha.boundTo)){Aa=0;lc=Ha.value.length;if(1===Ha.size)for(ib=0;ib<lc;ib++)Ha.array[ib]=Ha.value[ib];else if(2===Ha.size)for(ib=0;ib<lc;ib++)vb=Ha.value[ib],Ha.array[Aa]=vb.x,Ha.array[Aa+1]=vb.y,Aa+=2;else if(3===Ha.size)if("c"===Ha.type)for(ib=0;ib<lc;ib++)vb=Ha.value[ib],Ha.array[Aa]=vb.r,Ha.array[Aa+1]=vb.g,Ha.array[Aa+2]=vb.b,Aa+=3;else for(ib=0;ib<lc;ib++)vb=Ha.value[ib],Ha.array[Aa]=vb.x,Ha.array[Aa+1]=vb.y,Ha.array[Aa+2]=vb.z,Aa+=3;else if(4===
Ha.size)for(ib=0;ib<lc;ib++)vb=Ha.value[ib],Ha.array[Aa]=vb.x,Ha.array[Aa+1]=vb.y,Ha.array[Aa+2]=vb.z,Ha.array[Aa+3]=vb.w,Aa+=4;g.bindBuffer(g.ARRAY_BUFFER,Ha.buffer);g.bufferData(g.ARRAY_BUFFER,Ha.array,Nb)}}}k.verticesNeedUpdate=!1;k.colorsNeedUpdate=!1;k.normalsNeedUpdate=!1;r.attributes&&B(r)}else if(j instanceof THREE.Line){r=e(j,k);p=r.attributes&&n(r);if(k.verticesNeedUpdate||k.colorsNeedUpdate||k.lineDistancesNeedUpdate||p){var Fb=k,Dc=g.DYNAMIC_DRAW,sc=void 0,tc=void 0,uc=void 0,Ec=void 0,
Oa=void 0,Fc=void 0,Qc=Fb.vertices,Rc=Fb.colors,Sc=Fb.lineDistances,ad=Qc.length,bd=Rc.length,cd=Sc.length,Gc=Fb.__vertexArray,Hc=Fb.__colorArray,Tc=Fb.__lineDistanceArray,dd=Fb.colorsNeedUpdate,ed=Fb.lineDistancesNeedUpdate,Mc=Fb.__webglCustomAttributesList,Ic=void 0,Uc=void 0,jb=void 0,mc=void 0,wb=void 0,Ia=void 0;if(Fb.verticesNeedUpdate){for(sc=0;sc<ad;sc++)Ec=Qc[sc],Oa=3*sc,Gc[Oa]=Ec.x,Gc[Oa+1]=Ec.y,Gc[Oa+2]=Ec.z;g.bindBuffer(g.ARRAY_BUFFER,Fb.__webglVertexBuffer);g.bufferData(g.ARRAY_BUFFER,
Gc,Dc)}if(dd){for(tc=0;tc<bd;tc++)Fc=Rc[tc],Oa=3*tc,Hc[Oa]=Fc.r,Hc[Oa+1]=Fc.g,Hc[Oa+2]=Fc.b;g.bindBuffer(g.ARRAY_BUFFER,Fb.__webglColorBuffer);g.bufferData(g.ARRAY_BUFFER,Hc,Dc)}if(ed){for(uc=0;uc<cd;uc++)Tc[uc]=Sc[uc];g.bindBuffer(g.ARRAY_BUFFER,Fb.__webglLineDistanceBuffer);g.bufferData(g.ARRAY_BUFFER,Tc,Dc)}if(Mc){Ic=0;for(Uc=Mc.length;Ic<Uc;Ic++)if(Ia=Mc[Ic],Ia.needsUpdate&&(void 0===Ia.boundTo||"vertices"===Ia.boundTo)){Oa=0;mc=Ia.value.length;if(1===Ia.size)for(jb=0;jb<mc;jb++)Ia.array[jb]=
Ia.value[jb];else if(2===Ia.size)for(jb=0;jb<mc;jb++)wb=Ia.value[jb],Ia.array[Oa]=wb.x,Ia.array[Oa+1]=wb.y,Oa+=2;else if(3===Ia.size)if("c"===Ia.type)for(jb=0;jb<mc;jb++)wb=Ia.value[jb],Ia.array[Oa]=wb.r,Ia.array[Oa+1]=wb.g,Ia.array[Oa+2]=wb.b,Oa+=3;else for(jb=0;jb<mc;jb++)wb=Ia.value[jb],Ia.array[Oa]=wb.x,Ia.array[Oa+1]=wb.y,Ia.array[Oa+2]=wb.z,Oa+=3;else if(4===Ia.size)for(jb=0;jb<mc;jb++)wb=Ia.value[jb],Ia.array[Oa]=wb.x,Ia.array[Oa+1]=wb.y,Ia.array[Oa+2]=wb.z,Ia.array[Oa+3]=wb.w,Oa+=4;g.bindBuffer(g.ARRAY_BUFFER,
Ia.buffer);g.bufferData(g.ARRAY_BUFFER,Ia.array,Dc)}}}k.verticesNeedUpdate=!1;k.colorsNeedUpdate=!1;k.lineDistancesNeedUpdate=!1;r.attributes&&B(r)}else if(j instanceof THREE.ParticleSystem){r=e(j,k);p=r.attributes&&n(r);if(k.verticesNeedUpdate||k.colorsNeedUpdate||j.sortParticles||p){var Tb=k,Nc=g.DYNAMIC_DRAW,vc=j,xb=void 0,Ub=void 0,Vb=void 0,aa=void 0,Wb=void 0,fc=void 0,Jc=Tb.vertices,Oc=Jc.length,Pc=Tb.colors,Vc=Pc.length,ic=Tb.__vertexArray,jc=Tb.__colorArray,ac=Tb.__sortArray,Wc=Tb.verticesNeedUpdate,
Xc=Tb.colorsNeedUpdate,bc=Tb.__webglCustomAttributesList,Hb=void 0,nc=void 0,ma=void 0,Ib=void 0,Ca=void 0,Z=void 0;if(vc.sortParticles){nb.copy(Ab);nb.multiply(vc.matrixWorld);for(xb=0;xb<Oc;xb++)Vb=Jc[xb],Ea.copy(Vb),Ea.applyProjection(nb),ac[xb]=[Ea.z,xb];ac.sort(m);for(xb=0;xb<Oc;xb++)Vb=Jc[ac[xb][1]],aa=3*xb,ic[aa]=Vb.x,ic[aa+1]=Vb.y,ic[aa+2]=Vb.z;for(Ub=0;Ub<Vc;Ub++)aa=3*Ub,fc=Pc[ac[Ub][1]],jc[aa]=fc.r,jc[aa+1]=fc.g,jc[aa+2]=fc.b;if(bc){Hb=0;for(nc=bc.length;Hb<nc;Hb++)if(Z=bc[Hb],void 0===
Z.boundTo||"vertices"===Z.boundTo)if(aa=0,Ib=Z.value.length,1===Z.size)for(ma=0;ma<Ib;ma++)Wb=ac[ma][1],Z.array[ma]=Z.value[Wb];else if(2===Z.size)for(ma=0;ma<Ib;ma++)Wb=ac[ma][1],Ca=Z.value[Wb],Z.array[aa]=Ca.x,Z.array[aa+1]=Ca.y,aa+=2;else if(3===Z.size)if("c"===Z.type)for(ma=0;ma<Ib;ma++)Wb=ac[ma][1],Ca=Z.value[Wb],Z.array[aa]=Ca.r,Z.array[aa+1]=Ca.g,Z.array[aa+2]=Ca.b,aa+=3;else for(ma=0;ma<Ib;ma++)Wb=ac[ma][1],Ca=Z.value[Wb],Z.array[aa]=Ca.x,Z.array[aa+1]=Ca.y,Z.array[aa+2]=Ca.z,aa+=3;else if(4===
Z.size)for(ma=0;ma<Ib;ma++)Wb=ac[ma][1],Ca=Z.value[Wb],Z.array[aa]=Ca.x,Z.array[aa+1]=Ca.y,Z.array[aa+2]=Ca.z,Z.array[aa+3]=Ca.w,aa+=4}}else{if(Wc)for(xb=0;xb<Oc;xb++)Vb=Jc[xb],aa=3*xb,ic[aa]=Vb.x,ic[aa+1]=Vb.y,ic[aa+2]=Vb.z;if(Xc)for(Ub=0;Ub<Vc;Ub++)fc=Pc[Ub],aa=3*Ub,jc[aa]=fc.r,jc[aa+1]=fc.g,jc[aa+2]=fc.b;if(bc){Hb=0;for(nc=bc.length;Hb<nc;Hb++)if(Z=bc[Hb],Z.needsUpdate&&(void 0===Z.boundTo||"vertices"===Z.boundTo))if(Ib=Z.value.length,aa=0,1===Z.size)for(ma=0;ma<Ib;ma++)Z.array[ma]=Z.value[ma];
else if(2===Z.size)for(ma=0;ma<Ib;ma++)Ca=Z.value[ma],Z.array[aa]=Ca.x,Z.array[aa+1]=Ca.y,aa+=2;else if(3===Z.size)if("c"===Z.type)for(ma=0;ma<Ib;ma++)Ca=Z.value[ma],Z.array[aa]=Ca.r,Z.array[aa+1]=Ca.g,Z.array[aa+2]=Ca.b,aa+=3;else for(ma=0;ma<Ib;ma++)Ca=Z.value[ma],Z.array[aa]=Ca.x,Z.array[aa+1]=Ca.y,Z.array[aa+2]=Ca.z,aa+=3;else if(4===Z.size)for(ma=0;ma<Ib;ma++)Ca=Z.value[ma],Z.array[aa]=Ca.x,Z.array[aa+1]=Ca.y,Z.array[aa+2]=Ca.z,Z.array[aa+3]=Ca.w,aa+=4}}if(Wc||vc.sortParticles)g.bindBuffer(g.ARRAY_BUFFER,
Tb.__webglVertexBuffer),g.bufferData(g.ARRAY_BUFFER,ic,Nc);if(Xc||vc.sortParticles)g.bindBuffer(g.ARRAY_BUFFER,Tb.__webglColorBuffer),g.bufferData(g.ARRAY_BUFFER,jc,Nc);if(bc){Hb=0;for(nc=bc.length;Hb<nc;Hb++)if(Z=bc[Hb],Z.needsUpdate||vc.sortParticles)g.bindBuffer(g.ARRAY_BUFFER,Z.buffer),g.bufferData(g.ARRAY_BUFFER,Z.array,Nc)}}k.verticesNeedUpdate=!1;k.colorsNeedUpdate=!1;r.attributes&&B(r)}}};this.initMaterial=function(a,b,c,d){var e,f,h,i;a.addEventListener("dispose",wc);var j,k,l,m,n;a instanceof
THREE.MeshDepthMaterial?n="depth":a instanceof THREE.MeshNormalMaterial?n="normal":a instanceof THREE.MeshBasicMaterial?n="basic":a instanceof THREE.MeshLambertMaterial?n="lambert":a instanceof THREE.MeshPhongMaterial?n="phong":a instanceof THREE.LineBasicMaterial?n="basic":a instanceof THREE.LineDashedMaterial?n="dashed":a instanceof THREE.ParticleBasicMaterial&&(n="particle_basic");if(n){var p=THREE.ShaderLib[n];a.uniforms=THREE.UniformsUtils.clone(p.uniforms);a.vertexShader=p.vertexShader;a.fragmentShader=
p.fragmentShader}var r=e=0,t=0;f=p=0;for(var u=b.length;f<u;f++)h=b[f],h.onlyShadow||(h instanceof THREE.DirectionalLight&&e++,h instanceof THREE.PointLight&&r++,h instanceof THREE.SpotLight&&t++,h instanceof THREE.HemisphereLight&&p++);f=r;h=t;i=p;t=p=0;for(r=b.length;t<r;t++)u=b[t],u.castShadow&&(u instanceof THREE.SpotLight&&p++,u instanceof THREE.DirectionalLight&&!u.shadowCascade&&p++);m=p;Gb&&d&&d.useVertexTexture?l=1024:(b=g.getParameter(g.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),
void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),l=b);a:{var t=a.fragmentShader,r=a.vertexShader,p=a.uniforms,b=a.attributes,u=a.defines,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof
THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:l,useVertexTexture:Gb&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:h,maxHemiLights:i,maxShadows:m,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,
shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},v,x,w,d=[];n?d.push(n):(d.push(t),d.push(r));for(x in u)d.push(x),d.push(u[x]);for(v in c)d.push(v),d.push(c[v]);n=d.join();v=0;for(x=S.length;v<x;v++)if(d=S[v],d.code===n){d.usedTimes++;k=d.program;break a}v="SHADOWMAP_TYPE_BASIC";c.shadowMapType===THREE.PCFShadowMap?v="SHADOWMAP_TYPE_PCF":c.shadowMapType===
THREE.PCFSoftShadowMap&&(v="SHADOWMAP_TYPE_PCF_SOFT");x=[];for(w in u)d=u[w],!1!==d&&(d="#define "+w+" "+d,x.push(d));d=x.join("\n");w=g.createProgram();x=["precision "+M+" float;",d,Ob?"#define VERTEX_TEXTURES":"",A.gammaInput?"#define GAMMA_INPUT":"",A.gammaOutput?"#define GAMMA_OUTPUT":"",A.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+
c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?
"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+v:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":
"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
v=["precision "+M+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",d,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",A.gammaInput?"#define GAMMA_INPUT":"",A.gammaOutput?"#define GAMMA_OUTPUT":"",A.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+v:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");x=L("vertex",x+r);v=L("fragment",v+t);g.attachShader(w,x);g.attachShader(w,v);g.linkProgram(w);g.getProgramParameter(w,g.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+g.getProgramParameter(w,g.VALIDATE_STATUS)+", gl error ["+
g.getError()+"]");g.deleteShader(v);g.deleteShader(x);w.uniforms={};w.attributes={};var z;v="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?v.push("boneTexture"):v.push("boneGlobalMatrices");for(z in p)v.push(z);z=v;v=0;for(x=z.length;v<x;v++)p=z[v],w.uniforms[p]=g.getUniformLocation(w,p);v="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(z=0;z<c.maxMorphTargets;z++)v.push("morphTarget"+
z);for(z=0;z<c.maxMorphNormals;z++)v.push("morphNormal"+z);for(k in b)v.push(k);k=v;z=0;for(b=k.length;z<b;z++)v=k[z],w.attributes[v]=g.getAttribLocation(w,v);w.id=ja++;S.push({program:w,code:n,usedTimes:1});A.info.memory.programs=S.length;k=w}a.program=k;z=a.program.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;b="morphTarget";for(k=0;k<this.maxMorphTargets;k++)w=b+k,0<=z[w]&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=0;b="morphNormal";for(k=0;k<this.maxMorphNormals;k++)w=
b+k,0<=z[w]&&a.numSupportedMorphNormals++}a.uniformsList=[];for(j in a.uniforms)a.uniformsList.push([a.uniforms[j],j])};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?g.disable(g.CULL_FACE):(b===THREE.FrontFaceDirectionCW?g.frontFace(g.CW):g.frontFace(g.CCW),a===THREE.CullFaceBack?g.cullFace(g.BACK):a===THREE.CullFaceFront?g.cullFace(g.FRONT):g.cullFace(g.FRONT_AND_BACK),g.enable(g.CULL_FACE))};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,a=a.side===THREE.BackSide;ha!==
b&&(b?g.disable(g.CULL_FACE):g.enable(g.CULL_FACE),ha=b);U!==a&&(a?g.frontFace(g.CW):g.frontFace(g.CCW),U=a)};this.setDepthTest=function(a){va!==a&&(a?g.enable(g.DEPTH_TEST):g.disable(g.DEPTH_TEST),va=a)};this.setDepthWrite=function(a){Ga!==a&&(g.depthMask(a),Ga=a)};this.setBlending=function(a,b,c,d){a!==ba&&(a===THREE.NoBlending?g.disable(g.BLEND):a===THREE.AdditiveBlending?(g.enable(g.BLEND),g.blendEquation(g.FUNC_ADD),g.blendFunc(g.SRC_ALPHA,g.ONE)):a===THREE.SubtractiveBlending?(g.enable(g.BLEND),
g.blendEquation(g.FUNC_ADD),g.blendFunc(g.ZERO,g.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(g.enable(g.BLEND),g.blendEquation(g.FUNC_ADD),g.blendFunc(g.ZERO,g.SRC_COLOR)):a===THREE.CustomBlending?g.enable(g.BLEND):(g.enable(g.BLEND),g.blendEquationSeparate(g.FUNC_ADD,g.FUNC_ADD),g.blendFuncSeparate(g.SRC_ALPHA,g.ONE_MINUS_SRC_ALPHA,g.ONE,g.ONE_MINUS_SRC_ALPHA)),ba=a);if(a===THREE.CustomBlending){if(b!==ua&&(g.blendEquation(r(b)),ua=b),c!==na||d!==ga)g.blendFunc(r(c),r(d)),na=c,ga=d}else ga=
na=ua=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",kc),a.__webglTexture=g.createTexture(),A.info.memory.textures++);g.activeTexture(g.TEXTURE0+b);g.bindTexture(g.TEXTURE_2D,a.__webglTexture);g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL,a.flipY);g.pixelStorei(g.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);g.pixelStorei(g.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=r(a.format),
f=r(a.type);T(g.TEXTURE_2D,a,d);var h=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<h.length&&d){for(var i=0,j=h.length;i<j;i++)c=h[i],g.texImage2D(g.TEXTURE_2D,i,e,c.width,c.height,0,e,f,c.data);a.generateMipmaps=!1}else g.texImage2D(g.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture){i=0;for(j=h.length;i<j;i++)c=h[i],g.compressedTexImage2D(g.TEXTURE_2D,i,e,c.width,c.height,0,c.data)}else if(0<h.length&&d){i=0;for(j=h.length;i<j;i++)c=h[i],g.texImage2D(g.TEXTURE_2D,
i,e,e,f,c);a.generateMipmaps=!1}else g.texImage2D(g.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&g.generateMipmap(g.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else g.activeTexture(g.TEXTURE0+b),g.bindTexture(g.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener("dispose",qc);a.__webglTexture=
g.createTexture();A.info.memory.textures++;var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=r(a.format),e=r(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];g.bindTexture(g.TEXTURE_CUBE_MAP,a.__webglTexture);T(g.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=g.createFramebuffer();a.__webglRenderbuffer[f]=g.createRenderbuffer();g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var h=a,i=g.TEXTURE_CUBE_MAP_POSITIVE_X+f;g.bindFramebuffer(g.FRAMEBUFFER,
a.__webglFramebuffer[f]);g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,i,h.__webglTexture,0);l(a.__webglRenderbuffer[f],a)}c&&g.generateMipmap(g.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=g.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:g.createRenderbuffer(),g.bindTexture(g.TEXTURE_2D,a.__webglTexture),T(g.TEXTURE_2D,a,c),g.texImage2D(g.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=g.TEXTURE_2D,g.bindFramebuffer(g.FRAMEBUFFER,a.__webglFramebuffer),
g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_ATTACHMENT,g.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_STENCIL_ATTACHMENT,g.RENDERBUFFER,a.__webglRenderbuffer):l(a.__webglRenderbuffer,a),c&&g.generateMipmap(g.TEXTURE_2D);b?g.bindTexture(g.TEXTURE_CUBE_MAP,null):g.bindTexture(g.TEXTURE_2D,null);g.bindRenderbuffer(g.RENDERBUFFER,
null);g.bindFramebuffer(g.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=ab,a=qb,d=oa,e=Da);b!==Va&&(g.bindFramebuffer(g.FRAMEBUFFER,b),g.viewport(d,e,c,a),Va=b);Pb=c;Kb=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;a.shareDepthFrom=this.shareDepthFrom;
return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};THREE.RenderableFace3=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=
0};THREE.RenderableFace4=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,
new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableParticle=function(){this.id=0;this.object=null;this.z=this.y=this.x=0;this.rotation=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};
